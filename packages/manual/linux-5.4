#!/usr/bin/env bash
set -euo pipefail

. $(dirname $0)/.helper
. ${srcDir}/VERSION

echo "### getting the keys of the maintainers"
gpg --locate-keys torvalds@kernel.org gregkh@kernel.org
gpg --tofu-policy good 647F28654894E3BD457199BE38DBBDC86092693E
# Steven Rostedt <rostedt@goodmis.org>
gpg --keyserver hkps://keyserver.ubuntu.com --recv-keys 514B0EDE3C387F944FB3799329E574109AEBFAAA
gpg --tofu-policy good 514B0EDE3C387F944FB3799329E574109AEBFAAA
# Tom Zanussi <tom.zanussi@linux.intel.com>
gpg --keyserver hkps://keyserver.ubuntu.com --recv-keys ACF85F9816A8D5F096AE1FD20129F38552C38DF1
gpg --tofu-policy good ACF85F9816A8D5F096AE1FD20129F38552C38DF1
	
echo "### updating package repsitory"
sudo apt-get update
echo "### installing minimal create requirements"
sudo apt-get install --no-install-recommends -y equivs kernel-wedge python3-debian rsync libdistro-info-perl git quilt
echo "### pulling kernel and rt-patches" 
wget https://cdn.kernel.org/pub/linux/kernel/v5.x/linux-$KERNEL_VERSION.tar.{sign,xz}
wget https://mirrors.edge.kernel.org/pub/linux/kernel/projects/rt/$(cut -d. -f-2 <<< ${KERNEL_BASE})/older/patches-$KERNEL_RT_VERSION.tar.{sign,xz}
xz -dc linux-$KERNEL_VERSION.tar.xz      | gpg --verify linux-$KERNEL_VERSION.tar.sign -
xz -dc patches-$KERNEL_RT_VERSION.tar.xz | gpg --verify patches-$KERNEL_RT_VERSION.tar.sign -

echo "### cloning the latest and greatest debian release environment to linux"
git clone --depth 1 https://salsa.debian.org/kernel-team/linux.git $src
echo "### cloning the old kernel to linux-$KERNEL_DEBIAN"
git clone --depth 1 --single --branch debian/$KERNEL_DEBIAN https://salsa.debian.org/kernel-team/linux.git linux-$KERNEL_DEBIAN

echo "### pulling aufs5 from upstream not from debian" 
git clone https://github.com/sfjro/aufs5-standalone.git
cd aufs5-standalone
git -c advice.detachedHead=false checkout aufs$(cut -d. -f-2 <<< ${KERNEL_BASE})
cd ..

echo "### bootstrapping the kernel build"
cd $src
# keeping the upstream defines e.g. for gcc-10
mv debian/config/defines ..
rm -rf debian/config debian/patches debian/patches-rt/*
cp -R ../linux-$KERNEL_DEBIAN/debian/patches ../linux-$KERNEL_DEBIAN/debian/config debian/
mv ../defines debian/config/
echo "### integrating rt-patches"
debian/bin/genpatch-rt ../patches-$KERNEL_RT_VERSION.tar.xz

echo "### integrating aufs5-patches"
debian/bin/genpatch-aufs ../aufs5-standalone

echo "### setting Garden Linux abi, certificate, patching enhancements"
sed -i "s/abiname:.*/abiname:$KERNEL_ABI/" debian/config/defines
# to make sure we do not take this accidently
rm -f debian/certs/debian-uefi-certs.pem
cp /kernel.full debian/certs/gardenlinux-kernel-certs.pem
sed -i "s/debian-uefi-certs.pem/gardenlinux-kernel-certs.pem/" debian/config/config debian/config/featureset*/config debian/config/defines

patch -p1 < $srcDir/patches/environment/builderror.patch
patch -p1 < $srcDir/patches/environment/missinglds.patch
patch -p1 < $srcDir/patches/debian/fuzz.patch

patch -p1 < $srcDir/patches/debian/relax.patch
patch -p1 < $srcDir/patches/environment/analogix.patch
patch -p1 < $srcDir/patches/debian/series.patch

patch -p1 < $srcDir/patches/environment/python3-dev.patch
patch -p1 < $srcDir/patches/debian/version.patch
patch -p1 < $srcDir/patches/debian/0003-MODSIGN.patch
patch -p1 < $srcDir/patches/environment/cpupower.patch
patch -p1 < $srcDir/patches/debian/fs-add.patch
patch -p1 < $srcDir/patches/environment/scsi_common.patch

echo "### populating the changelog"
mv debian/changelog debian/changelog.tmp
cat - > debian/changelog <<EOF
linux ($KERNEL_DEBIAN) UNRELEASED; urgency=medium

  [ Garden Linux Maintainers ]
  * Compile with gcc-10 on all architectures.
  * [rt] Update to $KERNEL_RT_VERSION and re-enable.
  * Bump ABI to $KERNEL_ABI.
  * re-apply relax-relocations since we have a newer linker then 2.26
  * missing lds files fixed
  * fix traceid_list linker problem on gcc-10
  * fix udev_context linker problem on gcc-10

 -- Garden Linux Maintainers <contact@gardenlinux.io>  $(date -R)

EOF

cd ..
# checking out linux stable to have the whole changelog from the kernel readable for debian/bin/stable-update 
git clone --single --branch linux-$(echo $KERNEL_BASE | sed s/0$/y/) --bare https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable.git
cd $src

debian/bin/stable-update ../linux-stable.git $KERNEL_VERSION
cat debian/changelog debian/changelog.tmp > debian/changelog.new
mv debian/changelog.new debian/changelog
rm debian/changelog.tmp

echo "### generating a debian conform orig file and install"
PYTHONHASHSEED=0 debian/bin/genorig.py ../linux-*.tar.xz
make -f debian/rules orig
echo "### generate custom control files"
PYTHONHASHSEED=0 debian/bin/gencontrol.py
echo "### deviate needed packages and install"
TMPDIR=.. mk-build-deps debian/control
sudo apt-get install -y --no-install-recommends -f ../linux-build-deps_*_${KERNEL_ARCH}.deb
# missing in dependencies on arm64
[ "${KERNEL_ARCH}"  == "arm64" ] && sudo apt install -y --no-install-recommends gcc-arm-linux-gnueabihf 

echo "### downgrade sphinx for 5.4 kernel"
# old sphinx runs faster and does not bail out on errors for kernel 5.4
wget -P /tmp https://snapshot.debian.org/archive/debian/20210413T152040Z/pool/main/p/python-docutils/{docutils-common_0.16%2Bdfsg-4_all.deb,python3-docutils_0.16%2Bdfsg-4_all.deb}
wget -P /tmp https://snapshot.debian.org/archive/debian-ports/20200409T204941Z/pool/main/s/sphinx/{libjs-sphinxdoc_1.8.5-9_all.deb,python3-sphinx_1.8.5-9_all.deb,sphinx-common_1.8.5-9_all.deb}
sudo apt-get install -y --allow-downgrades -f /tmp/{libjs-sphinxdoc_1.8.5-9_all.deb,python3-sphinx_1.8.5-9_all.deb,sphinx-common_1.8.5-9_all.deb,docutils-common_0.16+dfsg-4_all.deb,python3-docutils_0.16+dfsg-4_all.deb}

echo "### enabling control file (supposed to fail)"
make -f debian/rules debian/control-real || /bin/true

donotmove="$(ls ..)"
echo "### build"
debuild
mv ../orig/linux_*.tar.xz ..
rm -rf ../orig
src=linux
move_package .. $donotmove
