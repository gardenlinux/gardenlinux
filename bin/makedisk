#!/usr/bin/env bash

set -Eeuo pipefail

exec 1>&2

rootfs="$1"
img="$2"

if [[ -e "$img" ]]; then
	echo "$img already exists"
	exit 1
fi

second_pass="$(</dev/stdin)"
[ -n "$second_pass" ]

img_size=0
syslinux_mbr=0

# sum up partition sizes and check if any uses syslinux (=> will need to write syslinux to MBR)
while IFS=$'\t' read -r part_uuid type size syslinux file label; do
	img_size=$((img_size + size))
	if [[ "$syslinux" = 1 ]]; then
		syslinux_mbr=1
	fi
done <<< "$second_pass"

# add 2MiB as overhead for GPT
img_size=$((img_size + 2))

truncate -s "${img_size}MiB" "$img"

disk_uuid=$(echo "gardenlinux:$version:disk_uuid" | uuid_hash)

# setup partition table
{
	echo "label: gpt"
	echo "label-id: $disk_uuid"
	while IFS=$'\t' read -r part_uuid type size syslinux file label; do
		echo "uuid=$part_uuid;type=$type;size=${size}MiB${label:+";name="}${label:+"$label"}$( ([[ "$syslinux" = 1 ]] && echo ";attrs=LegacyBIOSBootable") || true)"
	done <<< "$second_pass"
} | sfdisk "$img"

# when using syslinux on any partition write to MBR
if [[ "$syslinux_mbr" = 1 ]]; then
	dd if="$rootfs/usr/lib/SYSLINUX/gptmbr.bin" of="$img" bs=440 count=1 conv=notrunc
fi

gpt_dump=$(sfdisk -d "$img")

# sector_size should be 512, but query just to be safe
sector_size=$(grep -oP '(?<=sector-size: )[0-9]+' <<< "$gpt_dump")

while IFS=$'\t' read -r part_uuid type size syslinux file label; do
	# write partition to corresponding offset in image
	gpt_entry=$(grep -iF "uuid=$part_uuid" <<< "$gpt_dump")
	start_sector=$(grep -oP '(?<=start=) *[0-9]+' <<< "$gpt_entry" | tr -d '[:blank:]')
	num_sectors=$(grep -oP '(?<=size=) *[0-9]+' <<< "$gpt_entry" | tr -d '[:blank:]')
	dd if="$file" of="$img" bs="$sector_size" seek="$start_sector" count="$num_sectors" conv=notrunc
	rm "$file"
done <<< "$second_pass"

sha256sum "$img"
