#!/usr/bin/env bash
set -Eeuo pipefail

thisDir="$(dirname "$(readlink -f "$BASH_SOURCE")")"
source "$thisDir/.constants.sh" \
	--flags 'no-build,debug,skip-tests,suite:,gardenversion:,timestamp:' \
	--flags 'ports,arch:,qemu,features:,disable-features:,disable-images:,commitid:,userid:,usergid:' \
	--flags 'suffix:,prefix:' \
	--

export PATH="${thisDir}:${PATH}"
export REPO_ROOT="$(readlink -f "${thisDir}/..")"

commitid="${commitid:-local}"
eval "$dgetopt"
while true; do
	flag="$1"; shift
	dgetopt-case "$flag"
	case "$flag" in
		--debug) debug=1 ;;	# for jumping in the prepared image"
		--ports) ports=1 ;;	# for using "debian-ports"
		--arch) arch="$1"; shift ;; # for adding "--arch" to garden-init
		--qemu) qemu=1 ;;	# for using "qemu-debootstrap"
		--features) features="$1"; shift ;; # adding features
		--disable-features) disablefeatures="$1"; shift ;; # ignoring features
		--disable-images) disableimages="$1"; shift ;;
		--suite) suite="$1"; shift ;; # suite is a parameter this time
		--gardenversion|--timestamp) version="$1"; shift ;; # timestamp is a parameter this time
		--suffix) suffix="$1"; shift ;; # target name prefix
		--prefix) prefix="$1"; shift ;; # target name suffix
		--commitid) commitid="$1"; shift ;; # build commit hash
		--skip-tests) tests=0 shift ;; # skip tests
		--userid) userID="$1" shift ;;
		--usergid) userGID="$1" shift ;;
		--) break ;;
		*) eusage "unknown flag '$flag'" ;;
	esac
done

if [ ${debug:-} ]; then
	set -x
fi

userID="${userID:-$(id -u)}";
userGID="${userGID:-$(id -g)}";
disablefeatures="${disablefeatures:-}"
disableimages="${disableimages:-}"
epoch="$(garden-version --epoch "$version")"
serial="$(garden-version --date "$version")"
dpkgArch="${arch:-$(dpkg --print-architecture | awk -F- "{ print \$NF }")}"
export arch="$arch"

fullfeatures="$(garden-feat --featureDir $featureDir --features "$features" --ignore "$disablefeatures" features)"

if [ -z "${prefix+x}" ]; then
	prefix="/$(garden-feat --featureDir $featureDir --features "$features" --ignore "$disablefeatures" cname)-$dpkgArch-$version-$commitid"
fi

exportDir="output"
outputDir="$exportDir$prefix"

#TODO: clean this up and use volumeDir as outputDir when lessram is used
if [ "${OUTPUT_DIR+defined}" ]; then
	outputDir="${OUTPUT_DIR}${prefix}"
	buildLog="${outputDir}/build.log"
	mkdir -p "${outputDir}"
	touch "${buildLog}"
else
	volumeDir="/output$prefix"
	buildLog="/output$prefix.log"

	touch "${buildLog}"
	chown "${userID}":"${userGID}" "${buildLog}"
	chmod 644 "${buildLog}"
fi

echo > "${buildLog}"
exec > >(tee -a "${buildLog}") 2> >(tee -a "${buildLog}" >&2)

touch_epoch() {
	while [ "$#" -gt 0 ]; do
		local f="$1"; shift
		touch --no-dereference --date="@$epoch" "$f"
	done
}

keyringPlain="$scriptsDir/../gardenlinux.asc"

export GNUPGHOME="$(mktemp -d)"
keyring="$GNUPGHOME/gardenlinux.kbx"
gpg --batch --no-default-keyring --keyring "$keyring" --import "$keyringPlain"

{
	export version="$version"

	initArgs=( --arch="$dpkgArch" )
	configArgs=( --arch="$dpkgArch" )
	initArgs+=( --debian )
	if [ -n "${ports-}" ]; then
		initArgs+=(
			--debian-ports
			--include=debian-ports-archive-keyring
		)
	fi
	initArgs+=( --keyring "$keyring" --keyring-plain "$keyringPlain" )
	initArgs+=( --debootstrap-script "$suite" )

	[ -n "$fullfeatures" ] && initArgs+=( --features "$fullfeatures" )

	if [ -n "${qemu:-}" ]; then
		initArgs+=( --debootstrap="qemu-debootstrap" )
	fi

	garden-init "${initArgs[@]}" rootfs "$suite" "$version" "@$epoch"

	[ -n "$fullfeatures" ] && configArgs+=( --features "$fullfeatures" )

	# TODO fix for the pipelines, paths probably won't match
	touch rootfs/etc/gl-sign.crt rootfs/etc/gl-sign.key
	mount --bind /kernel.crt rootfs/etc/gl-sign.crt
	mount --bind /kernel.key rootfs/etc/gl-sign.key
	garden-config "${configArgs[@]}" rootfs
	umount rootfs/etc/gl-sign.crt rootfs/etc/gl-sign.key
	rm -f rootfs/etc/gl-sign.crt rootfs/etc/gl-sign.key
	#garden-apt-get rootfs update -qq
	#garden-apt-get rootfs dist-upgrade -yqq

	aptVersion="$("$scriptsDir/.apt-version.sh" rootfs)"

	# make a couple copies of rootfs so we can create other variants
	#for variant in slim sbuild; do
	#	mkdir "rootfs-$variant"
	#	tar -cC rootfs . | tar -xC "rootfs-$variant"
	#done

	garden-slimify rootfs

	sourcesListArgs=()
	[ -z "${ports:-}" ] || sourcesListArgs+=( --ports )

	#Brand it
	sed -i "s/^PRETTY_NAME=.*$/PRETTY_NAME=\"Garden Linux $(garden-version)\"/g" rootfs/etc/os-release
	sed -i "s/^HOME_URL=.*$/HOME_URL=\"https:\/\/gardenlinux.io\/\"/g" rootfs/etc/os-release
	sed -i "s/^SUPPORT_URL=.*$/SUPPORT_URL=\"https:\/\/github.com\/gardenlinux\/gardenlinux\"/g" rootfs/etc/os-release
	sed -i "s/^BUG_REPORT_URL=.*$/BUG_REPORT_URL=\"https:\/\/github.com\/gardenlinux\/gardenlinux\/issues\"/g" rootfs/etc/os-release
	echo "GARDENLINUX_FEATURES=$fullfeatures" >> rootfs/etc/os-release
	echo "GARDENLINUX_VERSION=$($scriptsDir/garden-version)" >> rootfs/etc/os-release
	echo "GARDENLINUX_COMMIT_ID=$commitid" >> rootfs/etc/os-release
	echo "VERSION_CODENAME=$version" >> rootfs/etc/os-release
	if [ -f rootfs/etc/update-motd.d/05-logo ]; then
		sed -i "s/@VERSION@/$(garden-version)/" rootfs/etc/update-motd.d/05-logo
	fi

	create_artifacts() {
		local targetBase="$1"; shift
		local rootfs="$1"; shift
		local version="$1"; shift
		local variant="$1"; shift

		local tarArgs=()
		if [ -n "${qemu:-}" ]; then
			tarArgs+=( --exclude="./usr/bin/qemu-*-static" )
		fi

		tarArgs+=( --include-dev )

		if [ "$variant" != "sbuild" ]; then
			garden-debian-sources-list "${sourcesListArgs[@]}" "$rootfs" "$suite" "$version"
		else
			# sbuild needs "deb-src" entries
			garden-debian-sources-list --deb-src "${sourcesListArgs[@]}" "$rootfs" "$suite" "$version"

			# schroot is picky about "/dev" (which is excluded by default in "garden-tar")
			# see https://github.com/debuerreotype/debuerreotype/pull/8#issuecomment-305855521
		fi

		garden-tar "${tarArgs[@]}" "$rootfs" "$targetBase.tar.xz"
		du -hsx "$targetBase.tar.xz"

		sha256sum "$targetBase.tar.xz" | cut -d" " -f1 > "$targetBase.tar.xz.sha256"
		cat "$targetBase.tar.xz.sha256"
		touch_epoch "$targetBase.tar.xz.sha256"

		garden-chroot "$rootfs" bash -c '
			if ! dpkg-query -f='\''${binary:Package} ${Version}\n'\'' -W 2> /dev/null; then
				dpkg -l
			fi
		' > "$targetBase.manifest"
		touch_epoch "$targetBase.manifest"

		for f in os-release; do
			targetFile="$targetBase.$(basename "$f" | sed -r "s/[^a-zA-Z0-9_-]+/-/g")"
			if [ -e "$rootfs/etc/$f" ]; then
				cp "$rootfs/etc/$f" "$targetFile"
				touch_epoch "$targetFile"
			fi
		done

		echo "#### fullfeatures"
		for i in $(tr ',' '\n' <<< $fullfeatures); do
			if [[ ",$disableimages," = *",$i,"* ]]; then # skip if image is in disableimages list
				true
			elif [ -s $featureDir/$i/image ]; then
				"$featureDir/$i/image" "$rootfs" "$targetBase"
			elif [ -f "$featureDir/$i/fstab" ]; then
				# find the writable partition and make sure it is the last one in the next step
				rwpart=$(sed -n '/rw/ s/LABEL=\([[:upper:]]*\).*/\1/p' < "$featureDir/$i/fstab")
				makepart "$rootfs" "$arch" < "$featureDir/$i/fstab" \
				| sed '$a\\n' | sed "/$rwpart/{h;d}; \$g; /^$/d" \
				| makedisk "$rootfs" "$targetBase.raw"
			else
				true
			fi
		done
	}

	for rootfs in rootfs*/; do
		rootfs="${rootfs%/}" # "rootfs", "rootfs-slim", ...

		du -hsx "$rootfs"

		variant="${rootfs#rootfs}" # "", "-slim", ...
		variant="${variant#-}" # "", "slim", ...

		variantDir="$outputDir/$variant"
		mkdir -p "$variantDir"

		targetBase="${variantDir}rootfs"

		create_artifacts "$targetBase" "$rootfs" "$version" "$variant"
	done

} >&2

if [ "${OUTPUT_DIR+defined}" ]; then
	echo
	echo ${outputDir}
else
        for i in $(find "${outputDir}" -type f); do
		newname="$(dirname $i).$(basename $i | cut -d. -f 2-)"
		mv $i $newname
		install -v -m 0644 -p -o "${userID}" -g "${userGID}" $newname "/output" 
	done
fi
