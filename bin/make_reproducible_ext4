#!/usr/bin/env bash

set -Eeufo pipefail

timestamp=0
hash_prefix=ext4
uuid=
label=
quota=0
resize=0
size_padding=0
large_journal=0

while [ $# -gt 0 ]; do
	case "$1" in
		-t|--timestamp)
			timestamp="$2"
			shift 2
			;;
		-h|--hash-prefix)
			hash_prefix="$2:$hash_prefix"
			shift 2
			;;
		-u|--uuid)
			uuid="$2"
			shift 2
			;;
		-l|--label)
			label="$2"
			shift 2
			;;
		-q|--enable-quotas)
			quota=1
			shift
			;;
		-m|--minimize-size)
			resize=1
			shift
			;;
		-p|--size-padding)
			size_padding="$2"
			shift 2
			;;
		-j|--large-journal)
			large_journal=1
			shift
			;;
		*)
			break
			;;
	esac
done

source="$1"
target="$2"
shift 2

[ -d "$source" ]
[ -f "$target" ]

export E2FSPROGS_FAKE_TIME=$timestamp

# set uuid and HTREE hash_seed to reproducible values instead of default random generated ones
uuid=${uuid:-$(echo -n "$hash_prefix:uuid" | uuid_hash)}
hash_seed=$(echo -n "$hash_prefix:hash_seed" | uuid_hash)

if [ "$resize" = 1 ] && [ "$large_journal" = 1 ]; then
	# pretend disk is 64GB in size to get sane defaults for journal size
	truncate -s 64G "$target"
fi

mke2fs -t ext4 -b 4096 -E hash_seed="$hash_seed" -U "$uuid" ${label:+"-L"} ${label:+"$label"} -I 256 -d "$source" "$target"

if [ "$quota" = 1 ]; then
	tune2fs -Q usrquota,grpquota,prjquota "$target"
fi

if [ "$resize" = 1 ]; then
	resize2fs -M "$target"

	if [ "$size_padding" != 0 ]; then
		size=$(du -b "$target" | awk '{ padded_size = $1 + (MB - ($1 % MB) % MB); print (padded_size / MB) + size_padding "MiB" }' "MB=1048576" "size_padding=$size_padding")
		truncate -s "$size" "$target"
		resize2fs "$target"
	fi
fi

# fixup timestamp on all used inodes to create reproducible ext4 image
num_inodes=$(dumpe2fs -h "$target" 2> /dev/null | grep '^Inode count:' | cut -d ':' -f 2 | tr -d ' ')
used_inodes=$(for (( inode=1; inode <= "$num_inodes"; inode++ )); do echo "testi <$inode>"; done | debugfs "$target" 2> /dev/null | grep -oP '(?<=Inode )[0-9]+(?= is marked in use)')
for inode in $used_inodes; do for field in {a,m,c}time; do echo "set_inode_field <$inode> $field @$timestamp"; done; done | debugfs -w "$target" &> /dev/null
