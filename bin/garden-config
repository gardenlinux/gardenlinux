#!/usr/bin/env bash

# Contains sources from https://github.com/debuerreotype/debuerreotype

set -Eeuo pipefail

thisDir="$(dirname "$(readlink -f "$BASH_SOURCE")")"
featureDir="$thisDir/../features"
source "$thisDir/.constants.sh" \
	--flags 'features:' \
	-- \
	'<target-dir>' \
	'rootfs'

eval "$dgetopt"
features=
while true; do
	flag="$1"; shift
	dgetopt-case "$flag"
	case "$flag" in
		--features) features="${features:+$features,}$1"; shift ;;
		--) break ;;
		*) eusage "unknown flag '$flag'" ;;
	esac
done

indent() { sed 's/^/  /'; }

targetDir="${1:-}"; shift || eusage 'missing target-dir'
[ -n "$targetDir" ]

aptVersion="$("$thisDir/.apt-version.sh" "$targetDir")"

[ "$features" = "full" ] && features=$(ls $featureDir | paste -sd, -)
printf "## executing exec.pre\n"
for i in $(echo "base,$features" | tr ',' '\n' | norm_features); do
        if [ -x $featureDir/$i/exec.pre ]; then
                printf "### $i:\n"
                thisDir=$thisDir targetDir=$targetDir $featureDir/$i/exec.pre "$targetDir" | indent
        fi
done

printf "## copying from file.include\n"
for i in $(echo "base,$features" | tr ',' '\n' | norm_features); do
	if [ -d "$featureDir/$i/file.include" ]; then
		printf "### $i:\n"
		tar --owner=0 --group=0 -cC $featureDir/$i/file.include . | tar -xvC $targetDir 2>&1 | grep -v "^./$" | paste -sd' '  - | indent
	fi
done

cp -r $featureDir $targetDir/tmp/
printf "## executing exec.config\n"
for i in $(echo "base,$features" | tr ',' '\n' | norm_features); do
	if [ -f $featureDir/$i/exec.config ]; then
		printf "### $i:\n"
		$thisDir/garden-chroot $targetDir /tmp/$(basename $featureDir)/$i/exec.config | indent
	fi
done
rm -rf $targetDir/tmp/$featureDir

printf "## deleting file.exclude\n"
set -o noglob
for i in $(echo "base,$features" | tr ',' '\n' | norm_features); do
	if [ -f "$featureDir/$i/file.exclude" ]; then
		printf "### $i:\n"
		cat $featureDir/$i/file.exclude | paste -sd' '  - | indent
		for j in $(cat $featureDir/$i/file.exclude); do
			rm -f $targetDir$j || true

#/some/filepath
#/some/dirpath/
#/some/dirpath/*
#/some/dirpath/**

		done
	fi
done
set +o noglob

printf "## executing exec.post\n"
for i in $(echo "base,$features" | tr ',' '\n' | norm_features); do
	if [ -x $featureDir/$i/exec.post ]; then
		printf "### $i:\n"
		thisDir=$thisDir targetDir=$targetDir $featureDir/$i/exec.post "$targetDir" | indent
	fi
done

# https://github.com/docker/docker/blob/d6f4fe9e38b60f63e429fff7ffced9c26cbf8236/contrib/mkimage/debootstrap#L63-L177

# prevent init scripts from running during install/update
#cat > "$targetDir/usr/sbin/policy-rc.d" <<-'EOF'
	#!/bin/sh
#	exit 101
#EOF
#chmod 0755 "$targetDir/usr/sbin/policy-rc.d"

# prevent upstart scripts from running during install/update (but only if the "upstart" package exists)
#if "$thisDir/garden-chroot" "$targetDir" apt-get install -qq -s upstart &> /dev/null; then
#	"$thisDir/garden-chroot" "$targetDir" dpkg-divert --local --rename --add /sbin/initctl > /dev/null
#	cp -a "$targetDir/usr/sbin/policy-rc.d" "$targetDir/sbin/initctl"
#	sed -i 's/^exit.*/exit 0/' "$targetDir/sbin/initctl"
#fi

