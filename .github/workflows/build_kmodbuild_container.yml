name: build_kmodbuild_container
on:
  workflow_call:
    inputs:
      version:
        type: string
        required: true
jobs:
  kmodbuild_container:
    name: Build kernel module build dev container (${{ matrix.arch }})
    runs-on: ${{ matrix.arch == 'arm64' && 'ubuntu-24.04-arm' || 'ubuntu-24.04' }}
    defaults:
      run:
        shell: bash
    env:
      CNAME: ''
    strategy:
      matrix:
        arch: [ amd64, arm64 ]
    permissions:
      actions: write
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # pin@v5.0.0
        with:
          submodules: true
      - id: build_container_cache
        uses: actions/cache/restore@0057852bfaa89a56745cba8c7296529d2fc39830 # pin@v4.3.0
        with:
          path: |
            COMMIT
            VERSION
          key: build-container-${{ matrix.arch }}-${{ github.run_id }}
      - if: ${{ steps.build_container_cache.outputs.cache-hit == 'true' }}
        name: Determine CNAME
        id: cname
        uses: gardenlinux/python-gardenlinux-lib/.github/actions/features_parse@9af6c50cf9ff955130dc412238ecd16f1d84d103 # pin@0.10.4
        with:
          flags: --cname container-${{ matrix.arch }} cname
      - if: ${{ steps.build_container_cache.outputs.cache-hit == 'true' }}
        name: Set CNAME
        run: |
          echo "CNAME=${{ steps.cname.outputs.result }}" | tee -a "$GITHUB_ENV"
      - if: ${{ steps.build_container_cache.outputs.cache-hit == 'true' }}
        name: Load container build artifact (${{ matrix.arch }})
        uses: actions/download-artifact@018cc2cf5baa6db3ef3c5f8a56943fffe632ef53 # pin@v6.0.0
        with:
          name: build-container-${{ matrix.arch }}
      - if: ${{ steps.build_container_cache.outputs.cache-hit == 'true' }}
        name: Build kernel module build dev container (${{ matrix.arch }})
        run: |
          commit="$(./get_commit)"
          commit_short="${commit:0:8}"

          version="$(bin/garden-version "${{ inputs.version }}")"

          if [ "$version" == "today" ]; then
            version="$(bin/garden-version now)"
          fi

          mkdir ".build"
          tar -C ".build/" -xzf "$CNAME.tar.gz"
          rm "$CNAME.tar.gz"

          podman login -u token -p ${{ github.token }} ghcr.io

          base="ghcr.io/${{ github.repository }}:$version"
          image="$(gl-oci load-container --oci_archive ".build/container-${{ matrix.arch }}-$(cat VERSION)-${commit_short}.oci" --additional_tag "$base" | awk '{ print $NF }')"
          snapshot="$(gh api "/repos/gardenlinux/repo/contents/.container?ref=$version" | jq -r '.content' | base64 -d)"

          gl-oci pull-container --container "$snapshot" --platform linux/${{ matrix.arch }}
          gl-oci build-container --container "ghcr.io/${{ github.repository }}/kmodbuild" --tag "${{ matrix.arch }}-${version}" --platform linux/${{ matrix.arch }} --dir "images/kmodbuild" --build-arg base="$base" --build-arg snapshot="$snapshot"
          gl-oci save-container --container "ghcr.io/${{ github.repository }}/kmodbuild" --tag "${{ matrix.arch }}-${version}" --oci_archive "kmodbuild_container_${{ matrix.arch }}.oci"
      - if: ${{ steps.build_container_cache.outputs.cache-hit == 'true' }}
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # pin@v5.0.0
        with:
          name: kmodbuild-container-${{ matrix.arch }}
          path: kmodbuild_container_${{ matrix.arch }}.oci
          if-no-files-found: error
