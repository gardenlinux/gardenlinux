name: build_kmodbuild_container
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-build-kmodbuild-container
  cancel-in-progress: true
on:
  workflow_call:
    inputs:
      version:
        type: string
        required: true
jobs:
  kmodbuild_container:
    name: Build kernel module build dev container (${{ matrix.arch }})
    runs-on: ${{ matrix.arch == 'arm64' && 'ubuntu-24.04-arm' || 'ubuntu-24.04' }}
    defaults:
      run:
        shell: bash
    env:
      CNAME: ''
    strategy:
      matrix:
        arch: [ amd64, arm64 ]
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # pin@v4.1.1
        with:
          submodules: true
      - id: build_container_cache
        uses: actions/cache/restore@5a3ec84eff668545956fd18022155c47e93e2684 # pin@v4.2.3
        with:
          path: |
            COMMIT
            VERSION
          key: build-container-${{ matrix.arch }}-${{ github.run_id }}
      - if: ${{ steps.build_container_cache.outputs.cache-hit == 'true' }}
        name: Set CNAME
        run: |
          cname="$(./build --resolve-cname container-${{ matrix.arch }})"
          echo "CNAME=$cname" | tee -a "$GITHUB_ENV"
      - if: ${{ steps.build_container_cache.outputs.cache-hit == 'true' }}
        name: Load container build artifact (${{ matrix.arch }})
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # pin@v4.1.8
        with:
          name: build-container-${{ matrix.arch }}
      - if: ${{ steps.build_container_cache.outputs.cache-hit == 'true' }}
        name: Build kernel module build dev container (${{ matrix.arch }})
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          version="$(bin/garden-version "${{ inputs.version }}")"

          if [ "$version" == "today" ]; then
            version="$(bin/garden-version now)"
          fi

          tar -C ".build/" -xzf "$CNAME.tar.gz"
          rm "$CNAME.tar.gz"

          base="ghcr.io/${{ github.repository }}:$version"
          image="$(podman load -i .build/container-${{ matrix.arch }}-$(cat VERSION)-$(cat COMMIT).oci | awk '{ print $NF }')"
          podman tag "$image" "$base"

          snapshot="$(gh api "/repos/gardenlinux/repo/contents/.container?ref=$version" | jq -r '.content' | base64 -d)"

          podman login -u token -p "${GH_TOKEN}" ghcr.io
          podman pull --arch ${{ matrix.arch }} "$snapshot"

          podman build --arch ${{ matrix.arch }} --build-arg base="$base" --build-arg snapshot="$snapshot" -t ghcr.io/${{ github.repository }}/kmodbuild:${{ matrix.arch }}-${version} images/kmodbuild
          podman save --format oci-archive ghcr.io/${{ github.repository }}/kmodbuild:${{ matrix.arch }}-${version} > kmodbuild_container_${{ matrix.arch }}.oci
      - if: ${{ steps.build_container_cache.outputs.cache-hit == 'true' }}
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # pin@v4.4.3
        with:
          name: kmodbuild-container-${{ matrix.arch }}
          path: kmodbuild_container_${{ matrix.arch }}.oci
          if-no-files-found: error
