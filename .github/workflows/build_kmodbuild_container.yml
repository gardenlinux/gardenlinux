name: build_kmodbuild_container
on:
  workflow_call:
    inputs:
      version:
        type: string
        required: true
      prefix:
        type: string
        default: ''
jobs:
  kmodbuild_container:
    name: Build kernel module build dev container (${{ matrix.arch }})
    runs-on: ${{ matrix.arch == 'arm64' && 'ubuntu-24.04-arm' || 'ubuntu-24.04' }}
    defaults:
      run:
        shell: bash
    env:
      CNAME: ''
    strategy:
      matrix:
        arch: [ amd64, arm64 ]
    permissions:
      actions: write
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # pin@v5.0.0
        with:
          submodules: true
      - id: build_container_cache
        uses: actions/cache/restore@0400d5f644dc74513175e3cd8d07132dd4860809 # pin@v4.2.4
        with:
          path: |
            COMMIT
            VERSION
          key: ${{ inputs.prefix }}build-container-${{ matrix.arch }}-${{ github.run_id }}
      - if: ${{ steps.build_container_cache.outputs.cache-hit == 'true' }}
        name: Determine CNAME
        id: cname
        uses: gardenlinux/python-gardenlinux-lib/.github/actions/features_parse@97d6e1c28eb4565446563ed04bcbf3c4cb5d1bde # pin@0.9.0
        with:
          flags: --cname container-${{ matrix.arch }} cname
      - if: ${{ steps.build_container_cache.outputs.cache-hit == 'true' }}
        name: Set CNAME
        run: |
          echo "CNAME=${{ steps.cname.outputs.result }}" | tee -a "$GITHUB_ENV"
      - if: ${{ steps.build_container_cache.outputs.cache-hit == 'true' }}
        name: Load container build artifact (${{ matrix.arch }})
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # pin@v5.0.0
        with:
          name: ${{ inputs.prefix }}build-container-${{ matrix.arch }}
      - if: ${{ steps.build_container_cache.outputs.cache-hit == 'true' }}
        name: Build kernel module build dev container (${{ matrix.arch }})
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          commit="$(./get_commit)"
          commit_short="${commit:0:8}"

          version="$(bin/garden-version "${{ inputs.version }}")"

          if [ "$version" == "today" ]; then
            version="$(bin/garden-version now)"
          fi

          mkdir ".build"
          tar -C ".build/" -xzf "$CNAME.tar.gz"
          rm "$CNAME.tar.gz"

          base="ghcr.io/${{ github.repository }}:$version"
          image="$(podman load -i .build/container-${{ matrix.arch }}-$(cat VERSION)-${commit_short}.oci | awk '{ print $NF }')"
          podman tag "$image" "$base"

          snapshot="$(gh api "/repos/gardenlinux/repo/contents/.container?ref=$version" | jq -r '.content' | base64 -d)"

          podman login -u token -p "${GH_TOKEN}" ghcr.io
          podman pull --arch ${{ matrix.arch }} "$snapshot"

          podman build --arch ${{ matrix.arch }} --build-arg base="$base" --build-arg snapshot="$snapshot" -t ghcr.io/${{ github.repository }}/kmodbuild:${{ matrix.arch }}-${version} images/kmodbuild
          podman save --format oci-archive ghcr.io/${{ github.repository }}/kmodbuild:${{ matrix.arch }}-${version} > kmodbuild_container_${{ matrix.arch }}.oci
      - if: ${{ steps.build_container_cache.outputs.cache-hit == 'true' }}
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # pin@v4.6.2
        with:
          name: ${{ inputs.prefix }}kmodbuild-container-${{ matrix.arch }}
          path: kmodbuild_container_${{ matrix.arch }}.oci
          if-no-files-found: error
