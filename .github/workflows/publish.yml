name: 'Publish to ghcr.io'
on:
  workflow_dispatch:
    inputs:
      run_id:
        description: Workflow run ID
        type: number
        required: true
  workflow_run:
    workflows: [ 'Build and publish a release', 'nightly' ]
    types: [ 'completed' ]
jobs:
  workflow_data:
    if: ${{ github.event_name == 'workflow_dispatch' && inputs.run_id || github.event.workflow_run.conclusion == 'success' }}
    name: Download workflow JSON data from trigger
    uses: ./.github/workflows/download_workflow_data.yml
    with:
      run_id: ${{ github.event_name == 'workflow_dispatch' && inputs.run_id || github.event.workflow_run.id }}
  publish_oci_containers:
    needs: [ workflow_data ]
    name: Publish container base image
    uses: ./.github/workflows/publish_oci_containers.yml
    # @TODO: Replace with safe OCI manifast handling variant
    #strategy:
    #  fail-fast: false
    #  matrix:
    #    cnames: [ container-amd64, container-arm64 ]
    with:
      run_id: ${{ needs.workflow_data.outputs.run_id }}
      commit_id: ${{ needs.workflow_data.outputs.commit_id }}
      version: ${{ needs.workflow_data.outputs.version }}
      flavors_matrix: ${{ needs.workflow_data.outputs.flavors_matrix }}
      bare_flavors_matrix: ${{ needs.workflow_data.outputs.bare_flavors_matrix }}
      original_workflow_name: ${{ needs.workflow_data.outputs.original_workflow_name }}
    secrets:
      aws_region: ${{ secrets.AWS_REGION }}
      aws_role: ${{ secrets.AWS_IAM_ROLE }}
      aws_session: ${{ secrets.AWS_OIDC_SESSION }}
      oci_kms_arn: ${{ secrets.OCI_KMS_ARN }}
  publish_kmodbuild_container:
    needs: [ workflow_data ]
    name: Publish kernel module build dev container
    uses: ./.github/workflows/publish_kmodbuild_container.yml
    with:
      run_id: ${{ needs.workflow_data.outputs.run_id }}
      version: ${{ needs.workflow_data.outputs.version }}
  publish_retry:
    needs: [ publish_oci_containers, publish_kmodbuild_container ]
    if: ${{ failure() && ( needs.publish_oci_containers.result == 'failure' || needs.publish_kmodbuild_container.result == 'failure' ) }}
    name: 'Retry checkpoint: Publish to GitHub'
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # pin@v4.1.1
      - name: Retry failed publishing
        uses: actions/github-script@v7
        with:
          script: |
            const gitHubLib = await import("${{ github.workspace }}/.github/workflows/github.mjs");

            const gitHubRef = "${{ github.head_ref == '' && github.ref_name || github.head_ref }}";
            return await gitHubLib.dispatchRetryWorkflow(core, github.rest.actions, context, gitHubRef, 3);
