name: release page
on:
  workflow_dispatch:
    inputs:
      type:
        type: choice
        default: beta
        options:
        - beta
        - stable
      version:
        required: true
        type: string
      commit:
        required: true
        type: string
        description: "Full commitish"
jobs:
  create_release:
    environment: oidc_aws_s3_upload
    permissions:
      id-token: write
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # pin@v4.1.1
      - name: install dependencies for generate_release_note.py script
        run: sudo apt-get update && sudo apt-get install -qy --no-install-recommends python3-boto3
      - name: create GitHub release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          .github/workflows/release_note.py create --tag ${{ inputs.version }} --commit "$(echo "${{ inputs.commit }}")"  
      - uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # pin@v3
        with:
          name: release
          path: .github_release_id
  upload_to_release:
    environment: oidc_aws_s3_upload
    needs: create_release
    permissions:
      contents: write
      id-token: write
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        architecture: [ amd64, arm64 ]
        cname: [ kvm-gardener_prod, metal-gardener_prod, gcp-gardener_prod, gdch-gardener_prod, aws-gardener_prod, azure-gardener_prod, ali-gardener_prod, openstack-gardener_prod, openstackbaremetal-gardener_prod, vmware-gardener_prod, metal-gardener_prod_pxe ]
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # pin@v4.1.1
      - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # pin@v3
        with:
          name: release
      - uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # pin@v4
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE }}
          role-session-name: ${{ secrets.AWS_OIDC_SESSION }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: download build artifacts from S3
        run: |
          commit="$(echo "${{ inputs.commit }}" | cut -c -8)"
          prefix="${{ matrix.cname }}-${{ matrix.architecture }}-${{ inputs.version }}-$commit"
          .github/workflows/download_from_s3.sh "${{ secrets.AWS_S3_BUCKET }}" "$prefix"
          # pack tar.xz file for release
          tar -cv "$prefix" | xz -9 > "$prefix.tar.xz"
      - name: upload to release
        run: |
          commit="$(echo "${{ inputs.commit }}" | cut -c -8)"
          release="$(cat .github_release_id)"
          prefix="${{ matrix.cname }}-${{ matrix.architecture }}-${{ inputs.version }}-$commit"
          echo "$release $prefix.tar.xz"
          ls -lah "$prefix.tar.xz"
          echo "$prefix.tar.xz" | .github/workflows/release-page.sh ${{ secrets.GITHUB_TOKEN }} ${{ github.repository }} upload "$release"

          # upload test logs separately (if they exist)
          ls -la "$prefix/$prefix.chroot.test.log" || true
          ls -la "$prefix/$prefix.chroot.test.xml" || true
          ls -la "$prefix/$prefix.platform.test.log" || true
          ls -la "$prefix/$prefix.platform.test.xml" || true
          test -f "$prefix/$prefix.chroot.test.log" && echo "$prefix/$prefix.chroot.test.log" | .github/workflows/release-page.sh ${{ secrets.GITHUB_TOKEN }} ${{ github.repository }} upload "$release"
          test -f "$prefix/$prefix.chroot.test.xml" && echo "$prefix/$prefix.chroot.test.xml" | .github/workflows/release-page.sh ${{ secrets.GITHUB_TOKEN }} ${{ github.repository }} upload "$release"
          test -f ls -la "$prefix/$prefix.platform.test.log" && echo "$prefix/$prefix.platform.test.log" | .github/workflows/release-page.sh ${{ secrets.GITHUB_TOKEN }} ${{ github.repository }} upload "$release"
          test -f ls -la "$prefix/$prefix.platform.test.xml" && echo "$prefix/$prefix.platform.test.xml" | .github/workflows/release-page.sh ${{ secrets.GITHUB_TOKEN }} ${{ github.repository }} upload "$release"
