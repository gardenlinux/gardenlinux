name: build_flavor
on:
  workflow_call:
    inputs:
      arch:
        type: string
        default: "amd64"
      flavor:
        type: string
        required: true
      commit_id:
        type: string
        required: true
      version:
        type: string
        required: true
      signing_env:
        type: string
        default: ''
    secrets:
      secureboot_db_kms_arn:
        required: false
      aws_region:
        required: false
      aws_kms_role:
        required: false
      aws_oidc_session:
        required: false
jobs:
  build:
    name: Build flavor ${{ inputs.flavor }} (${{ inputs.arch }})
    runs-on: ${{ inputs.arch == 'arm64' && 'ubuntu-24.04-arm' || 'ubuntu-24.04' }}
    defaults:
      run:
        shell: bash
    permissions:
      id-token: write
    env:
      CNAME: ''
      USE_KMS: ${{ inputs.signing_env == '' && 'false' || 'true' }}
    environment: ${{ inputs.signing_env }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # pin@v5.0.0
        with:
          submodules: true
      - name: Set build reference
        run: |
          echo "${{ inputs.commit_id }}" | tee COMMIT
          echo "${{ inputs.version }}" | tee VERSION
      - name: Load bootstrap stage cache
        uses: actions/cache/restore@0400d5f644dc74513175e3cd8d07132dd4860809 # pin@v4.2.4
        with:
          path: .build
          key: base-${{ inputs.arch }}-${{ github.run_id }}
          fail-on-cache-miss: true
      - name: Load certs artifact
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # pin@v5.0.0
        with:
          name: certs
          path: cert/
      - name: Configure aws credentials for kms signing
        id: aws_auth
        if: ${{ env.USE_KMS == 'true' }}
        uses: aws-actions/configure-aws-credentials@7474bc4690e29a8392af63c5b98e7449536d5c3a # pin@v4
        with:
          role-to-assume: ${{ secrets.aws_kms_role }}
          role-session-name: ${{ secrets.aws_oidc_session }}
          aws-region: ${{ secrets.aws_region }}
          role-duration-seconds: 14400
      - name: Write secureboot db arn for kms backed certificates
        if: ${{ steps.aws_auth.conclusion == 'success' }}
        run: echo "${{ secrets.secureboot_db_kms_arn }}" > cert/secureboot.db.arn
      - name: Update bootstrap stage build artifact timestamps
        run: |
          t="$(date '+%s')"
          find .build -exec touch -d "@$t" {} +
      - name: Build
        run: make ${{ inputs.flavor }}-${{ inputs.arch }}-build
      - name: Determine CNAME
        id: cname
        uses: gardenlinux/python-gardenlinux-lib/.github/actions/features_parse@033901ecf380b9241117778ca6c369567a09494b # pin@0.8.9
        with:
          flags: --cname ${{ inputs.flavor }}-${{ inputs.arch }} cname
      - name: Set CNAME
        run: |
          echo "CNAME=${{ steps.cname.outputs.result }}" | tee -a "$GITHUB_ENV"
      - name: Pack build artifacts for upload
        run: tar -cSzvf "$CNAME.tar.gz" -C .build -T ".build/$CNAME.artifacts"
      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # pin@v4.6.2
        with:
          name: build-${{ inputs.flavor }}-${{ inputs.arch }}
          path: ${{ env.CNAME }}.tar.gz
          if-no-files-found: error
      - uses: actions/cache/save@0400d5f644dc74513175e3cd8d07132dd4860809 # pin@v4.2.4
        with:
          path: |
            COMMIT
            VERSION
          key: build-${{ inputs.flavor }}-${{ inputs.arch }}-${{ github.run_id }}
