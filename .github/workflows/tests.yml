name: tests
on:
  workflow_call:
    inputs:
      version:
        type: string
        default: today
      default_modifier:
        type: string
        default: ""
    secrets:
      gcp_identity_provider:
        required: true
      gcp_service_account:
        required: true
      gcp_project:
        required: true
      gcp_region:
        required: true
      gcp_zone:
        required: true
      aws_role:
        required: true
      aws_session:
        required: true
      aws_region:
        required: true
      az_client_id:
        required: true
      az_tenant_id:
        required: true
      az_subscription_id:
        required: true
      ccc_credentials:
        required: true
jobs:
  platform_tests:
    name: platform test
    env:
      gcp_project: ${{ secrets.gcp_project }}
      gcp_region: ${{ secrets.gcp_region }}
      gcp_zone: ${{ secrets.gcp_zone }}
      aws_region: ${{ secrets.aws_region }}
      azure_subscription_id: ${{ secrets.az_subscription_id }}
      AZURE_CONFIG_DIR: /tmp/azure_config_dir
      TARGET_ARCHITECTURE: ${{ matrix.arch }}
      artifact_dir: /tmp/gardenlinux-build-artifacts
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    permissions:
      id-token: write
      packages: write
    environment: oidc_platform_tests
    strategy:
      fail-fast: false
      matrix:
        arch: [ amd64, arm64 ]
        target: [ gcp, aws, azure, ali ]
        modifier: [ "${{ inputs.default_modifier }}" ]
        exclude:
          - arch: arm64
            target: azure
          - arch: arm64
            target: ali
    steps:
    - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # pin@v4.1.1
    - uses: ./.github/actions/setup

    - name: login to ghcr.io
      run: echo "${{ secrets.GITHUB_TOKEN }}" | podman login ghcr.io -u $ --password-stdin

    - name: pull container image
      run: |
        podman pull "ghcr.io/gardenlinux/gardenlinux/platform-test:$GITHUB_SHA"
        podman tag "ghcr.io/gardenlinux/gardenlinux/platform-test:$GITHUB_SHA" ghcr.io/gardenlinux/gardenlinux/platform-test:today

    - name: set VERSION=${{ inputs.version }}
      run: |
        bin/garden-version "${{ inputs.version }}" | tee VERSION
        git update-index --assume-unchanged VERSION

    - name: get cname
      run: |
        cname="$(./build --resolve-cname ${{ matrix.target }}${{ matrix.modifier }}-${{ matrix.arch }})"
        echo "cname=$cname" | tee -a "$GITHUB_ENV"

    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # pin@v3
      with:
        name: build-${{ env.cname }}
        path: ${{ env.artifact_dir }}

    - run: ls -lah ${{ env.artifact_dir }}

    - if: ${{ matrix.target == 'gcp' }}
      id: 'auth_gcp'
      name: 'Authenticate to Google Cloud'
      uses: google-github-actions/auth@62cf5bd3e4211a0a0b51f2c6d6a37129d828611d # pin@v1
      with:
        workload_identity_provider: ${{ secrets.gcp_identity_provider }}
        service_account: ${{ secrets.gcp_service_account }}
        create_credentials_file: true
        cleanup_credentials: true
        export_environment_variables: true

    - if: ${{ matrix.target == 'aws' }}
      id: 'auth_aws'
      name: 'Authenticate to AWS'
      uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # pin@v4
      with:
        role-to-assume: ${{ secrets.aws_role }}
        role-session-name: ${{ secrets.aws_session }}
        aws-region: ${{ secrets.aws_region }}

    - if: ${{ matrix.target == 'azure' }}
      id: 'auth_azure'
      name: 'Authenticate to Azure'
      uses: azure/login@6c251865b4e6290e7b78be643ea2d005bc51f69a # pin@v1
      with:
        client-id: ${{ secrets.az_client_id }}
        tenant-id: ${{ secrets.az_tenant_id }}
        subscription-id: ${{ secrets.az_subscription_id }}

    - if: ${{ matrix.target == 'ali' }}
      name: 'Create ali cloud credential file'
      run: |
        base64 -d <<< "${{ secrets.ccc_credentials }}" | .github/workflows/ali_credentials.jq > ali-service-account.json
        echo "::add-mask::$(jq -r '.profiles[0].access_key_id' < ali-service-account.json)"
        echo "::add-mask::$(jq -r '.profiles[0].access_key_secret' < ali-service-account.json)"

    - name: start platform test for ${{ matrix.target }}
      run: |
        set -o pipefail
        .github/workflows/${{ matrix.target }}_tests.sh --arch "${{ matrix.arch }}" "${{ env.cname }}" 2>&1 | tee "${{ env.artifact_dir}}/${{ env.cname }}.platform.test.log"

    - uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # pin@v3
      with:
        name: platform-test-${{ env.cname }}
        path: |
          ${{ env.artifact_dir }}/${{ env.cname }}.platform.test.log
          ${{ env.artifact_dir }}/${{ env.cname }}.platform.test.xml
