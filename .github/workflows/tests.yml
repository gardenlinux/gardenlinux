name: tests
on:
  workflow_call:
    inputs:
      version:
        type: string
        default: today
      default_modifier:
        type: string
        default: ""
    secrets:
      gcp_identity_provider:
        required: true
      gcp_service_account:
        required: true
      gcp_project:
        required: true
      gcp_region:
        required: true
      gcp_zone:
        required: true
      aws_role:
        required: true
      aws_session:
        required: true
      aws_region:
        required: true
      az_client_id:
        required: true
      az_tenant_id:
        required: true
      az_subscription_id:
        required: true
jobs:
  platform_tests:
    name: platform test
    env:
      gcp_project: ${{ secrets.gcp_project }}
      gcp_region: ${{ secrets.gcp_region }}
      gcp_zone: ${{ secrets.gcp_zone }}
      aws_region: ${{ secrets.aws_region }}
      azure_subscription_id: ${{ secrets.az_subscription_id }}
      AZURE_CONFIG_DIR: /tmp/azure_config_dir
    runs-on: ec2-gardenlinux-amd64
    permissions:
      id-token: write
      packages: write
    environment: oidc_platform_tests
    strategy:
      fail-fast: false
      matrix:
        architecture: [ amd64, arm64 ]
        target: [ gcp, aws, azure ]
        modifier: [ "${{ inputs.default_modifier }}" ]
        exclude:
          - architecture: arm64
            target: gcp
          - architecture: arm64
            target: azure
    steps:
    - uses: actions/checkout@v3

    - name: login to ghcr.io
      run: echo "${{ secrets.GITHUB_TOKEN }}" | sudo podman login ghcr.io -u $ --password-stdin
      shell: bash

    - name: pull container image
      run: |
        sudo podman pull "ghcr.io/gardenlinux/gardenlinux/integration-test:$GITHUB_SHA"
        sudo podman tag "ghcr.io/gardenlinux/gardenlinux/integration-test:$GITHUB_SHA" ghcr.io/gardenlinux/gardenlinux/integration-test:today
      shell: bash

    - name: set VERSION=${{ inputs.version }}
      run: |
        bin/garden-version "${{ inputs.version }}" | tee VERSION
        git update-index --assume-unchanged VERSION
      shell: bash

    - name: get cname
      run: |
        cname="$(bin/garden-feat --features ${{ matrix.target }}${{ matrix.modifier }}${{ matrix.additional_modifer }})"
        artifact_name="$cname-${{ matrix.architecture }}-${{ inputs.version }}-$(git rev-parse --short HEAD)"
        printf 'cname=%s\nartifact_name=%s\n' "$cname" "$artifact_name" | tee -a "$GITHUB_ENV"
      shell: bash

    - uses: actions/download-artifact@v3
      with:
        name: build-${{ env.artifact_name }}
        path: /tmp/gardenlinux-build-artifacts

    - if: ${{ matrix.target }} == 'gcp'
      id: 'auth_gcp'
      name: 'Authenticate to Google Cloud'
      uses: google-github-actions/auth@v1
      with:
        workload_identity_provider: ${{ secrets.gcp_identity_provider }}
        service_account: ${{ secrets.gcp_service_account }}
        create_credentials_file: True
        cleanup_credentials: True
        # Paths are different in the container, exported variables would be useless anyway.
        export_environment_variables: False

    - if: ${{ matrix.target }} == 'aws'
      id: 'auth_aws'
      name: 'Authenticate to AWS'
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        role-to-assume: ${{ secrets.aws_role }}
        role-session-name: ${{ secrets.aws_session }}
        aws-region: ${{ secrets.aws_region }}

    - if: ${{ matrix.target }} == 'azure'
      id: 'auth_azure'
      name: 'Authenticate to Azure'
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.az_client_id }}
        tenant-id: ${{ secrets.az_tenant_id }}
        subscription-id: ${{ secrets.az_subscription_id }}

    - name: start platform test for ${{ matrix.target }}
      run: |
        export gcp_credentials_file_path=${{ steps.auth_gcp.outputs.credentials_file_path }}
        set -o pipefail && .github/workflows/${{ matrix.target }}_tests.sh --arch "${{ matrix.architecture }}" "${{ env.artifact_name }}.tar.gz" 2>&1 | tee "${{ env.artifact_name }}.integration-tests-log"
      shell: bash

    - uses: actions/upload-artifact@v3
      with:
        name: tests-${{ env.artifact_name }}
        path: ${{ env.artifact_name }}.integration-tests-log
