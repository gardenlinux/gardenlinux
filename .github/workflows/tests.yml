name: tests
on:
  # triggered by other workflows
  workflow_call:
    inputs:
      version:
        description: "Garden Linux Version"
        type: string
        default: today
      platform_test_tag:
        description: "Tag to run platform-test containers. 'latest', Full commitish or GL version. Tag must be available in ghcr.io/gardenlinux/gardenlinux/platform-test-*"
        type: string
        required: true
        default: "latest"
    secrets:
      gcp_identity_provider:
        required: true
      gcp_service_account:
        required: true
      gcp_project:
        required: true
      gcp_region:
        required: true
      gcp_zone:
        required: true
      aws_role:
        required: true
      aws_session:
        required: true
      aws_region:
        required: true
      az_client_id:
        required: true
      az_tenant_id:
        required: true
      az_subscription_id:
        required: true
      ccc_credentials:
        required: true
jobs:
  matrix:
    name: generate matrices
    runs-on: 'ubuntu-latest'
    defaults:
      run:
        shell: bash
    outputs:
      matrix: ${{ steps.matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # pin@v4.1.1
      - id: matrix
        run: |
          FLAVORS_AMD64=$(./bin/flavors_parse.py --no-arch --json-by-arch --test-platform | jq -r '.amd64')
          FLAVORS_ARM64=$(./bin/flavors_parse.py --no-arch --json-by-arch --test-platform | jq -r '.arm64')
          MATRIX=$(jq -nc \
            --argjson amd64 "$FLAVORS_AMD64" \
            --argjson arm64 "$FLAVORS_ARM64" \
            '{
              include: (
                ($amd64 | map({arch: "amd64", flavor: .})) +
                ($arm64 | map({arch: "arm64", flavor: .}))
              )
            }'
          )
          echo "matrix=$MATRIX" | tee -a $GITHUB_OUTPUT
  platform_test_images:
    name: platform test images
    uses: ./.github/workflows/platform-test-images.yml
    with:
      gl_version: ${{ inputs.platform_test_tag }}
  platform_tests:
    name: platform test
    needs: [ matrix, platform_test_images ]
    env:
      gcp_project: ${{ secrets.gcp_project }}
      gcp_region: ${{ secrets.gcp_region }}
      gcp_zone: ${{ secrets.gcp_zone }}
      aws_region: ${{ secrets.aws_region }}
      azure_subscription_id: ${{ secrets.az_subscription_id }}
      AZURE_CONFIG_DIR: /tmp/azure_config_dir
      TARGET_ARCHITECTURE: ${{ matrix.arch }}
      artifact_dir: /tmp/gardenlinux-build-artifacts
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    permissions:
      id-token: write
      packages: write
    environment: oidc_platform_tests
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.matrix.outputs.matrix) }}
    steps:
    - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # pin@v4.1.1
    - uses: ./.github/actions/setup
    - name: set VERSION=${{ inputs.version }}
      run: |
        bin/garden-version "${{ inputs.version }}" | tee VERSION
        git update-index --assume-unchanged VERSION

    - name: get cname and platform
      run: |
        cname="$(./build --resolve-cname ${{ matrix.flavor }}-${{ matrix.arch }})"
        echo "cname=${cname}" | tee -a "$GITHUB_ENV"
        flavor="${{ matrix.flavor }}"
        platform="${flavor%%-*}"
        echo "platform=${platform}" | tee -a "$GITHUB_ENV"

    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # pin@v4.1.8
      with:
        name: build-${{ env.cname }}
        path: ${{ env.artifact_dir }}

    - run: ls -lah ${{ env.artifact_dir }}

    - if: ${{ env.platform == 'gcp' }}
      id: 'auth_gcp'
      name: 'Authenticate to Google Cloud'
      uses: google-github-actions/auth@6fc4af4b145ae7821d527454aa9bd537d1f2dc5f # pin@v1
      with:
        workload_identity_provider: ${{ secrets.gcp_identity_provider }}
        service_account: ${{ secrets.gcp_service_account }}
        create_credentials_file: true
        cleanup_credentials: true
        export_environment_variables: true

    - if: ${{ env.platform == 'aws' }}
      id: 'auth_aws'
      name: 'Authenticate to AWS'
      uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # pin@v4
      with:
        role-to-assume: ${{ secrets.aws_role }}
        role-session-name: ${{ secrets.aws_session }}
        aws-region: ${{ secrets.aws_region }}

    - if: ${{ env.platform == 'azure' }}
      id: 'auth_azure'
      name: 'Authenticate to Azure'
      uses: azure/login@a65d910e8af852a8061c627c456678983e180302 # pin@v1
      with:
        client-id: ${{ secrets.az_client_id }}
        tenant-id: ${{ secrets.az_tenant_id }}
        subscription-id: ${{ secrets.az_subscription_id }}

    - if: ${{ env.platform == 'ali' }}
      name: 'Create ali cloud credential file'
      run: |
        base64 -d <<< "${{ secrets.ccc_credentials }}" | .github/workflows/ali_credentials.jq > ali-service-account.json
        echo "::add-mask::$(jq -r '.profiles[0].access_key_id' < ali-service-account.json)"
        echo "::add-mask::$(jq -r '.profiles[0].access_key_secret' < ali-service-account.json)"

    - name: start platform test for ${{ matrix.flavor }}-${{ matrix.arch }}
      run: |
        set -o pipefail
        feature_test=$(echo "${{ matrix.flavor }}" | grep -o "_trustedboot[^-]*" || true)
        .github/workflows/${{ env.platform }}${feature_test}_tests.sh --arch "${{ matrix.arch }}" "${{ env.cname }}" 2>&1 | tee "${{ env.artifact_dir}}/${{ env.cname }}.platform.test.log"

    - uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # pin@v4.4.3
      with:
        name: platform-test-${{ env.cname }}
        path: |
          ${{ env.artifact_dir }}/${{ env.cname }}.platform.test.log
          ${{ env.artifact_dir }}/${{ env.cname }}.platform.test.xml
