name: upload to S3
on:
  workflow_call:
    inputs:
      commit_id:
        type: string
        required: true
      version:
        type: string
        required: true
      flavors_matrix:
        type: string
        required: true
      run_id:
        type: string
        required: true
      with_certs:
        type: boolean
        default: false
    secrets:
      aws_role:
        required: true
      aws_session:
        required: true
      aws_region:
        required: true
      aws_s3_bucket:
        required: true
jobs:
  upload_to_s3:
    name: upload to S3
    runs-on: ubuntu-24.04
    defaults:
      run:
        shell: bash
    env:
      CNAME: ''
    permissions:
      id-token: write
    environment: oidc_aws_s3_upload
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(inputs.flavors_matrix) }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # pin@v5.0.0
        with:
          submodules: true
      - name: Install python-gardenlinux-lib
        uses: gardenlinux/python-gardenlinux-lib/.github/actions/setup@033901ecf380b9241117778ca6c369567a09494b # pin@0.8.9
      - uses: aws-actions/configure-aws-credentials@7474bc4690e29a8392af63c5b98e7449536d5c3a # pin@v4
        with:
          role-to-assume: ${{ secrets.aws_role }}
          role-session-name: ${{ secrets.aws_session }}
          aws-region: ${{ secrets.aws_region }}
          role-duration-seconds: 14400 # 4 hours
      - name: Set flavor version reference
        run: |
          echo "${{ inputs.commit_id }}" | tee COMMIT
          echo "${{ inputs.version }}" | tee VERSION
      - name: Set CNAME
        run: |
          echo "CNAME=$(gl-features-parse --cname ${{ matrix.flavor }}-${{ matrix.arch }} cname)" | tee -a "$GITHUB_ENV"
      - uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # pin@v5.0.0
        with:
          name: build-${{ matrix.flavor }}-${{ matrix.arch }}
          github-token: ${{ github.token }}
          run-id: ${{ inputs.run_id }}
      - name: Load test artifacts
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # pin@v5.0.0
        with:
          pattern: "*-test-${{ env.CNAME }}"
          merge-multiple: true
          github-token: ${{ github.token }}
          run-id: ${{ inputs.run_id }}
      - if: ${{ inputs.with_certs }}
        name: Load certs artifact
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # pin@v5.0.0
        with:
          name: certs
          github-token: ${{ github.token }}
          run-id: ${{ inputs.run_id }}
          path: ${{ env.CNAME }}/
      - name: Prepare S3 upload artifacts
        run: |
          mkdir -p "$CNAME"
          tar -C $CNAME -xzvf "$CNAME.tar.gz"
          rm "$CNAME.tar.gz"

          if [ -f "$CNAME.chroot.test.log" ]; then
            mv $CNAME.chroot.test.log "$CNAME"
            mv $CNAME.chroot.test.xml "$CNAME"
          fi

          if [ -f "$CNAME.platform.test.log" ]; then
            mv $CNAME.platform.test.log "$CNAME"
            mv $CNAME.platform.test.xml "$CNAME"
          fi
      - if: ${{ inputs.with_certs }}
        name: Add certs to build artifacts
        run: |
          pushd $CNAME
          for file in "secureboot."*; do
            mv "$file" "$CNAME.$file"
          done
          popd
      - name: Upload to S3 bucket ${{ secrets.aws_s3_bucket }}
        run: |
          gl-s3 --bucket ${{ secrets.aws_s3_bucket }} --cname "$CNAME" --path "$CNAME" upload-artifacts-to-bucket
