name: upload to S3
on:
  workflow_call:
    inputs:
      version:
        type: string
        default: today
      default_modifier:
        type: string
        default: ""
    secrets:
      bucket:
        required: true
      region:
        required: true
      role:
        required: true
      session:
        required: true
jobs:
  upload_to_s3:
    name: upload to S3
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    permissions:
      id-token: write
    environment: oidc_aws_s3_upload
    strategy:
      fail-fast: false
      matrix:
        arch: [ amd64, arm64 ]
        target: [ kvm, "kvm_secureboot", "kvm_secureboot_readonly", "kvm_secureboot_readonly_persistence", metal, "metal_secureboot", "metal_secureboot_readonly", "metal_secureboot_readonly_persistence", gcp, gdch, aws, "aws_secureboot", "aws_secureboot_readonly", "aws_secureboot_readonly_persistence", azure, ali, openstack, openstackbaremetal, vmware, "metal_pxe" ]
        modifier: [ "${{ inputs.default_modifier }}" ]
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # pin@v4.1.1
      - uses: ./.github/actions/setup
      - uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # pin@v4
        with:
          role-to-assume: ${{ secrets.role }}
          role-session-name: ${{ secrets.session }}
          aws-region: ${{ secrets.region }}
      - name: set VERSION=${{ inputs.version }}
        run: |
          bin/garden-version "${{ inputs.version }}" | tee VERSION
          git update-index --assume-unchanged VERSION
      - name: get cname
        run: |
          cname="$(./build --resolve-cname ${{ matrix.target }}${{ matrix.modifier }}-${{ matrix.arch }})"
          echo "cname=$cname" | tee -a "$GITHUB_ENV"
      - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # pin@v4.1.8
        with:
          # match build-${{ env.cname }} and  platform-test-${{ env.cname }}
          pattern: "*-${{ env.cname }}"
      # repack tar.gz from build workflow to contain platform-test logs (if they exist)
      - name: add platform-test logs to tar.gz
        run: |
          ls -l platform-test-${{ env.cname }}/${{ env.cname }}.platform.test.log || true
          ls -l platform-test-${{ env.cname }}/${{ env.cname }}.platform.test.xml || true
          if [ -f platform-test-${{ env.cname }}/${{ env.cname }}.platform.test.log ]; then
            gunzip build-${{ env.cname }}/${{ env.cname }}.tar.gz
            tar -rvf build-${{ env.cname }}/${{ env.cname }}.tar -C platform-test-${{ env.cname }} ${{ env.cname }}.platform.test.log ${{ env.cname }}.platform.test.xml
            gzip build-${{ env.cname }}/${{ env.cname }}.tar
          else
            echo "no platform-test log files found"
          fi
      - name: upload to S3 bucket ${{ secrets.bucket }}
        run: |
          cd build-${{ env.cname }}
          ${{ github.workspace }}/.github/workflows/upload_to_s3.sh ${{ secrets.bucket }} ${{ env.cname }}.tar.gz
