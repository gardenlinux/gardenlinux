# Tests artifacts already uploaded to S3
name: platform tests only
on:
  # triggered manually
  workflow_dispatch:
    inputs:
      version:
        description: "Garden Linux Version: version passed to glrd"
        type: string
        default: now
      build:
        description: "Build for version 'today' instead of downloading version from S3"
        type: boolean
        default: false
      platform_test_tag:
        description: "Tag to run platform-test containers. 'nightly', Full commitish or GL version. Tag must be available in ghcr.io/gardenlinux/gardenlinux/platform-test-*"
        type: string
        required: true
        default: "latest"
      flavors_parse_params:
        description: 'Run bin/parse_flavors.py with these parameters'
        default: '--no-arch --json-by-arch --publish --test-platform'
        type: string

jobs:
  build:
    if: ${{ inputs.build == true }}
    uses: ./.github/workflows/build.yml
    permissions:
      id-token: write
      packages: write
    with:
      version: '${{ inputs.version }}'
      use_kms: false
      flavors_parse_params_images: '${{ inputs.flavors_parse_params }}'
      flavors_parse_params_bare: '--exclude "*" --no-arch --json-by-arch'
    secrets:
      aws_region: ${{ secrets.AWS_REGION }}
      aws_oidc_session: ${{ secrets.AWS_OIDC_SESSION }}
  tests:
    needs: [ build ]
    # also run if build is skipped
    if: always()
    permissions:
      id-token: write
      packages: write
    uses: ./.github/workflows/tests.yml
    with:
      version: ${{ inputs.version }}
      platform_test_tag: ${{ inputs.platform_test_tag || 'latest' }}
      flavors_parse_params: '${{ inputs.flavors_parse_params }}'
      download_s3: ${{ inputs.build == false }}
    secrets:
      gcp_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
      gcp_service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
      gcp_project_id: ${{ secrets.GCP_PROJECT }}
      gcp_region: ${{ secrets.GCP_REGION }}
      gcp_zone: ${{ secrets.GCP_ZONE }}
      aws_role: ${{ secrets.AWS_TESTS_IAM_ROLE }}
      aws_session: ${{ secrets.AWS_TESTS_OIDC_SESSION }}
      aws_region: ${{ secrets.AWS_TESTS_REGION }}
      aws_s3_bucket: ${{ secrets.AWS_S3_BUCKET }}
      az_client_id: ${{ secrets.AZURE_CLIENT_ID }}
      az_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
      az_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ccc_credentials: ${{ secrets.CCC_CREDENTIALS }}
      tf_encryption: ${{ secrets.TF_ENCRYPTION }}