name: publish gardenlinux container images
on:
  workflow_call:
    inputs:
      version:
        type: string
        default: now
jobs:
  publish_container:
    name: publish gardenlinux container base image
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # pin@v4.1.1
      - uses: ./.github/actions/setup
      - name: set VERSION=${{ inputs.version }}
        run: |
          bin/garden-version "${{ inputs.version }}" | tee VERSION
          git update-index --assume-unchanged VERSION
      - name: get cname
        run: |
          cname_amd64="$(./build --resolve-cname container-amd64)"
          cname_arm64="$(./build --resolve-cname container-arm64)"
          echo "cname_amd64=$cname_amd64" | tee -a "$GITHUB_ENV"
          echo "cname_arm64=$cname_arm64" | tee -a "$GITHUB_ENV"
      - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # pin@v4.1.8
        with:
          name: build-${{ env.cname_amd64 }}
      - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # pin@v4.1.8
        with:
          name: build-${{ env.cname_arm64 }}
      - name: publish gardenlinux container base image
        run: |
          version=$(bin/garden-version "${{ inputs.version }}")
          podman login -u token -p ${{ github.token }} ghcr.io
          tar xzv < "${{ env.cname_amd64 }}.tar.gz"
          image="$(podman load < ${{ env.cname_amd64 }}.oci | awk '{ print $NF }')"

          # Tagging for amd64 nightly
          podman tag "$image" ghcr.io/${{ github.repository }}:amd64-nightly
          podman push ghcr.io/${{ github.repository }}:amd64-nightly

          # Tagging for amd64 with version
          podman tag "$image" ghcr.io/${{ github.repository }}:amd64-${version}
          podman push ghcr.io/${{ github.repository }}:amd64-${version}

          tar xzv < "${{ env.cname_arm64 }}.tar.gz"
          image="$(podman load < ${{ env.cname_arm64 }}.oci | awk '{ print $NF }')"

          # Tagging for arm64 nightly
          podman tag "$image" ghcr.io/${{ github.repository }}:arm64-nightly
          podman push ghcr.io/${{ github.repository }}:arm64-nightly

          # Tagging for arm64 with version
          podman tag "$image" ghcr.io/${{ github.repository }}:arm64-${version}
          podman push ghcr.io/${{ github.repository }}:arm64-${version}

          # Creating and pushing manifest for nightly
          podman manifest create ghcr.io/${{ github.repository }}:nightly
          podman manifest add ghcr.io/${{ github.repository }}:nightly ghcr.io/${{ github.repository }}:amd64-nightly
          podman manifest add ghcr.io/${{ github.repository }}:nightly ghcr.io/${{ github.repository }}:arm64-nightly
          podman push ghcr.io/${{ github.repository }}:nightly

          # Creating and pushing manifest for version tag
          podman manifest create ghcr.io/${{ github.repository }}:${version}
          podman manifest add ghcr.io/${{ github.repository }}:${version} ghcr.io/${{ github.repository }}:amd64-${version}
          podman manifest add ghcr.io/${{ github.repository }}:${version} ghcr.io/${{ github.repository }}:arm64-${version}
          podman push ghcr.io/${{ github.repository }}:${version}

  publish_kmodbuild_container:
    name: publish gardenlinux kernel module build dev image
    runs-on: ubuntu-latest
    needs: publish_container
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # pin@v4.1.1
      - uses: ./.github/actions/setup
      - name: get container versions
        id: versions
        run: |
          version="$(bin/garden-version "${{ inputs.version }}")"
          snapshot="$(gh api "/repos/gardenlinux/repo/contents/.container?ref=$version" | jq -r '.content' | base64 -d)"
          echo -e "base=ghcr.io/${{ github.repository }}:$version\nsnapshot=$snapshot" | tee "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ github.token }}
      - name: publish gardenlinux kernel module build dev image
        run: |
          version=$(bin/garden-version "${{ inputs.version }}")
          podman login -u token -p ${{ github.token }} ghcr.io
          
          base='${{ steps.versions.outputs.base }}'
          snapshot='${{ steps.versions.outputs.snapshot }}'

          podman pull --arch amd64 "$base"
          podman pull --arch amd64 "$snapshot"
          podman build --arch amd64 --build-arg base="$base" --build-arg snapshot="$snapshot" -t ghcr.io/${{ github.repository }}/kmodbuild:amd64-${version} container/kmodbuild
          podman push ghcr.io/${{ github.repository }}/kmodbuild:amd64-${version}

          podman pull --arch arm64 "$base"
          podman pull --arch arm64 "$snapshot"
          podman build --arch arm64 --build-arg base="$base" --build-arg snapshot="$snapshot" -t ghcr.io/${{ github.repository }}/kmodbuild:arm64-${version} container/kmodbuild
          podman push ghcr.io/${{ github.repository }}/kmodbuild:arm64-${version}

          podman manifest create ghcr.io/${{ github.repository }}/kmodbuild:${version}
          podman manifest add ghcr.io/${{ github.repository }}/kmodbuild:${version} ghcr.io/${{ github.repository }}/kmodbuild:amd64-${version}
          podman manifest add ghcr.io/${{ github.repository }}/kmodbuild:${version} ghcr.io/${{ github.repository }}/kmodbuild:arm64-${version}
          podman push ghcr.io/${{ github.repository }}/kmodbuild:${version}

  publish_bare_flavors:
    name: publish bare flavors
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        config: [ libc, python, nodejs, sapmachine ]
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # pin@v4.1.1
      - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # pin@v4.1.8
        with:
          name: build-bare-${{ matrix.config }}-amd64
      - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # pin@v4.1.8
        with:
          name: build-bare-${{ matrix.config }}-arm64
      - run: ls -lah
      - name: publish bare container image
        run: |
          version=$(bin/garden-version "${{ inputs.version }}")
          podman login -u token -p ${{ github.token }} ghcr.io

          # Handling amd64 image
          image="$(podman load < ${{ matrix.config }}-amd64.oci | awk '{ print $NF }')"

          # Tagging and pushing amd64 with version
          podman tag "$image" ghcr.io/${{ github.repository }}/bare-${{ matrix.config }}:amd64-$version
          podman push ghcr.io/${{ github.repository }}/bare-${{ matrix.config }}:amd64-$version

          # Tagging and pushing amd64 with nightly
          podman tag "$image" ghcr.io/${{ github.repository }}/bare-${{ matrix.config }}:amd64-nightly
          podman push ghcr.io/${{ github.repository }}/bare-${{ matrix.config }}:amd64-nightly

          # Handling arm64 image
          image="$(podman load < ${{ matrix.config }}-arm64.oci | awk '{ print $NF }')"

          # Tagging and pushing arm64 with version
          podman tag "$image" ghcr.io/${{ github.repository }}/bare-${{ matrix.config }}:arm64-$version
          podman push ghcr.io/${{ github.repository }}/bare-${{ matrix.config }}:arm64-$version

          # Tagging and pushing arm64 with nightly
          podman tag "$image" ghcr.io/${{ github.repository }}/bare-${{ matrix.config }}:arm64-nightly
          podman push ghcr.io/${{ github.repository }}/bare-${{ matrix.config }}:arm64-nightly

          # Creating and pushing manifest for version tag
          podman manifest create ghcr.io/${{ github.repository }}/bare-${{ matrix.config }}:$version
          podman manifest add ghcr.io/${{ github.repository }}/bare-${{ matrix.config }}:$version ghcr.io/${{ github.repository }}/bare-${{ matrix.config }}:amd64-$version
          podman manifest add ghcr.io/${{ github.repository }}/bare-${{ matrix.config }}:$version ghcr.io/${{ github.repository }}/bare-${{ matrix.config }}:arm64-$version
          podman push ghcr.io/${{ github.repository }}/bare-${{ matrix.config }}:$version

          # Creating and pushing manifest for nightly tag
          podman manifest create ghcr.io/${{ github.repository }}/bare-${{ matrix.config }}:nightly
          podman manifest add ghcr.io/${{ github.repository }}/bare-${{ matrix.config }}:nightly ghcr.io/${{ github.repository }}/bare-${{ matrix.config }}:amd64-nightly
          podman manifest add ghcr.io/${{ github.repository }}/bare-${{ matrix.config }}:nightly ghcr.io/${{ github.repository }}/bare-${{ matrix.config }}:arm64-nightly
          podman push ghcr.io/${{ github.repository }}/bare-${{ matrix.config }}:nightly
