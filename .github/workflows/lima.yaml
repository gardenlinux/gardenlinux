name: Lima-VM Images

on:
  workflow_dispatch:
    inputs:
      version:
        description: Garden Linux version to build, for example '1443.1' or 'main'. Use 'main' instead of 'today'.
        required: true

jobs:
  collect-metadata:
    runs-on: ubuntu-latest
    outputs:
      CNAME: ${{ steps.cname.outputs.CNAME }}
      COMMIT: ${{ steps.commit.outputs.ID }}
    steps:
      - uses: actions/checkout@v4
        with:
          path: gardenlinux
      - uses: actions/checkout@v4
        with:
          repository: 'gardenlinux/builder'
          path: builder
      - run: sudo apt-get -y install python3 python3-mako python3-networkx python3-pefile python3-yaml
      - id: cname
        run: |
          CNAME=$(python builder/builder/parse_features --feature-dir gardenlinux/features --features kvm,lima,_curl cname_base)
          echo "CNAME=$CNAME" >> "$GITHUB_OUTPUT"
      - id: commit
        run: echo "ID=$(git rev-parse HEAD 2> /dev/null)" >> "$GITHUB_OUTPUT"
        working-directory: ./gardenlinux
  build:
    runs-on: ubuntu-latest
    needs: collect-metadata
    strategy:
      fail-fast: false
      matrix:
        arch: [amd64, arm64]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.version }}
      # Workaround for crun version, cf https://github.com/gardenlinux/gardenlinux/pull/1982
      - uses: ./.github/actions/setup
      - name: Build the image
        run: ./build ${{ needs.collect-metadata.outputs.CNAME }}-${{ matrix.arch }}
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ needs.collect-metadata.outputs.CNAME }}-${{ matrix.arch }}
          path: .build/${{ needs.collect-metadata.outputs.CNAME }}-${{ matrix.arch }}*qcow2
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ needs.collect-metadata.outputs.CNAME }}-${{ matrix.arch }}-yaml
          path: .build/${{ needs.collect-metadata.outputs.CNAME }}-${{ matrix.arch }}*yaml

  lima-manifest:
    runs-on: ubuntu-latest
    needs:
      - collect-metadata
      - build
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.version }}
      - uses: actions/download-artifact@v4
        with:
          name: ${{ needs.collect-metadata.outputs.CNAME }}-amd64-yaml
      - uses: actions/download-artifact@v4
        with:
          name: ${{ needs.collect-metadata.outputs.CNAME }}-arm64-yaml
      - run: |
          from pathlib import Path
          import os

          template = """# Lima file for Garden Linux
          # See https://gardenlinux.io/ for infos on Garden Linux
          # See https://lima-vm.io/ for infos on Lima

          # To create a new vm, run one of the following based on your desired architecture:
          #  limactl create --name=gardenlinux-today https://images.gardenlinux.io/${{ needs.collect-metadata.outputs.CNAME }}-amd64-${{ inputs.version == 'main' && 'today' ||  inputs.version }}-${{ needs.collect-metadata.outputs.COMMIT }}.yaml
          #  limactl create --name=gardenlinux-today https://images.gardenlinux.io/${{ needs.collect-metadata.outputs.CNAME }}-arm64-${{ inputs.version == 'main' && 'today' ||  inputs.version }}-${{ needs.collect-metadata.outputs.COMMIT }}.yaml

          vmType: qemu
          os: Linux
          images:
          __IMAGE__AMD__
          __IMAGE__ARM__

          containerd:
            system: false
            user: false
          """

          manifest = template\
            .replace("__IMAGE__AMD__", Path(os.environ["AMD_YAML_FILENAME"]).read_text())\
            .replace("__IMAGE__ARM__", Path(os.environ["ARM_YAML_FILENAME"]).read_text())

          with open(os.environ["OUTPUT_YAML_FILENAME"], "w+") as file:
            file.write(manifest)

        shell: python
        env:
          AMD_YAML_FILENAME: ${{ needs.collect-metadata.outputs.CNAME }}-amd64-${{ inputs.version == 'main' && 'today' ||  inputs.version }}-${{ needs.collect-metadata.outputs.COMMIT }}.yaml
          ARM_YAML_FILENAME: ${{ needs.collect-metadata.outputs.CNAME }}-arm64-${{ inputs.version == 'main' && 'today' ||  inputs.version }}-${{ needs.collect-metadata.outputs.COMMIT }}.yaml
          OUTPUT_YAML_FILENAME: ${{ needs.collect-metadata.outputs.CNAME }}-${{ inputs.version == 'main' && 'today' ||  inputs.version }}-${{ needs.collect-metadata.outputs.COMMIT }}.yaml

      - uses: actions/upload-artifact@v4
        with:
          name: lima-manifest-${{ needs.collect-metadata.outputs.CNAME }}-${{ inputs.version == 'main' && 'today' ||  inputs.version }}-${{ needs.collect-metadata.outputs.COMMIT }}.yaml
          path: ${{ needs.collect-metadata.outputs.CNAME }}-${{ inputs.version == 'main' && 'today' ||  inputs.version }}-${{ needs.collect-metadata.outputs.COMMIT }}.yaml
