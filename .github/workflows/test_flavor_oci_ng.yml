name: test_flavor
on:
  workflow_call:
    inputs:
      arch:
        type: string
        default: "amd64"
      flavor:
        type: string
        required: true
jobs:
  test:
    name: Test-NG flavor in OCI ${{ inputs.flavor }} (${{ inputs.arch }})
    runs-on: ${{ inputs.arch == 'arm64' && 'ubuntu-24.04-arm' || 'ubuntu-24.04' }}
    defaults:
      run:
        shell: bash
    permissions:
      actions: write
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # pin@v5.0.0
        with:
          submodules: true
      - name: Load bare flavor build artifact
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # pin@v5.0.0
        with:
          name: build-${{ inputs.flavor }}-${{ inputs.arch }}
          path: .build/bare_flavors
      - name: Restore EDK2 cache
        id: tests-ng-edk2-cache-restore
        uses: actions/cache/restore@0057852bfaa89a56745cba8c7296529d2fc39830 # pin@v4.3.0
        with:
          path: 
            .build/edk2-*
          key: tests-ng-edk2-${{ hashFiles('tests-ng/util/build.makefile') }}
      - name: Restore python runtime cache
        id: tests-ng-python-runtime-cache-restore
        uses: actions/cache/restore@0057852bfaa89a56745cba8c7296529d2fc39830 # pin@v4.3.0
        with:
          path: 
            .cache/cpython-*
          key: tests-ng-cache-edk2-${{ hashFiles('tests-ng/util/python.env.sh') }}
      - name: New Test Framework
        run: |
          ./test-ng .build/bare_flavors/$(echo "${{ inputs.flavor }}" | sed 's/^bare-//')-${{ inputs.arch }}.oci
      - name: Save EDK2 cache
        id: tests-ng-edk2-cache-save
        uses: actions/cache/save@0057852bfaa89a56745cba8c7296529d2fc39830 # pin@v4.3.0
        with:
          path: 
            .build/edk2-*
          key: tests-ng-edk2-${{ hashFiles('tests-ng/util/build.makefile')}}
      - name: Save python runtime cache
        id: tests-ng-python-runtime-cache-save
        uses: actions/cache/save@0057852bfaa89a56745cba8c7296529d2fc39830 # pin@v4.3.0
        with:
          path: 
            .cache/cpython-*
          key: tests-ng-cache-edk2-${{ hashFiles('tests-ng/util/python.env.sh') }}

      - name: Copy test results to build directory
        if: always()
        run: |
          cp tests-ng/log/oci.test-ng.log .build/$(echo "${{ inputs.flavor }}" | sed 's/^bare-//')-${{ inputs.arch }}.oci.test-ng.log || true
          # cp tests-ng/log/oci.test-ng.xml .build/$(echo "${{ inputs.flavor }}" | sed 's/^bare-//')-${{ inputs.arch }}.oci.test-ng.xml || true
      # enabled for chroot tests currently
      # - uses: pmeier/pytest-results-action@20b595761ba9bf89e115e875f8bc863f913bc8ad # pin@v0.7.2
      #   if: always()
      #   with:
      #     path: ".build/$(echo "${{ inputs.flavor }}" | sed 's/^bare-//')-${{ inputs.arch }}.oci.test-ng.xml"
      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # pin@v4.6.2
        if: always()
        with:
          if-no-files-found: ignore
          name: oci-test-ng-$(echo "${{ inputs.flavor }}" | sed 's/^bare-//')-${{ inputs.arch }}
          path: |
            .build/$(echo "${{ inputs.flavor }}" | sed 's/^bare-//')-${{ inputs.arch }}.oci.test-ng.log
            .build/$(echo "${{ inputs.flavor }}" | sed 's/^bare-//')-${{ inputs.arch }}.oci.test-ng.xml
