# Tests artifacts
name: Execute tests
concurrency:
  group: ${{ inputs.ignore_workflow_concurrency && github.run_id || format('{0}-{1}-manual-tests', github.workflow, github.ref) }}
  cancel-in-progress: true
on:
  # triggered manually
  workflow_dispatch:
    inputs:
      version:
        description: "Garden Linux version"
        type: string
        default: now
      target:
        description: "Garden Linux release target"
        type: choice
        default: dev
        options:
          - release
          - nightly
          - dev
      build:
        description: "Build for version specified in version input parameter instead of downloading it from S3."
        type: boolean
        default: false
      platform_test_tag:
        description: 'Tag to run platform-test containers. "latest" or GL version. Tag must be available in `ghcr.io/gardenlinux/gardenlinux/platform-test-*`'
        type: string
        default: latest
      flavors_parse_params_test:
        description: "Run bin/flavors_parse.py with these parameters for tests"
        default: '--exclude "bare-*" --no-arch --json-by-arch --build --test'
        type: string
      flavors_parse_params_test_bare:
        description: "Run bin/parse_flavors.py with these parameters for bare flavors"
        default: '--include-only "bare-*" --no-arch --json-by-arch --build --test'
        type: string
      test_types:
        description: "Types of tests to execute (comma-separated: chroot,qemu,cloud,oci,bare). Note: bare tests only work when build=true"
        type: string
        default: "chroot,qemu,cloud,oci"
      ignore_workflow_concurrency:
        description: "Execute workflows concurrently"
        type: boolean
        default: false
jobs:
  build:
    name: Build
    if: ${{ inputs.build == true }}
    uses: ./.github/workflows/build.yml
    with:
      version: ${{ inputs.version }}
      flavors_parse_params_test: ${{ inputs.flavors_parse_params_test }}
      platform_test_tag: ${{ inputs.platform_test_tag }}
      flavors_parse_params_test_bare: ${{ inputs.flavors_parse_params_test_bare }}
    permissions:
      actions: write # TODO: 3215 elevated permissions for included workflow
      packages: write # TODO: 3215 elevated permissions for included workflow
      id-token: write # TODO: 3215 elevated permissions for included workflow
  test:
    needs: build
    if: ${{ success() || failure() }}
    name: Test flavors built
    uses: ./.github/workflows/tests.yml
    with:
      flavors_matrix: ${{ needs.build.outputs.flavors_matrix }}
      bare_flavors_matrix: ${{ needs.build.outputs.bare_flavors_matrix }}
      test_types: ${{ inputs.test_types }}
    permissions:
      id-token: write # TODO: 3215 elevated permissions for included workflow
      actions: write # TODO: 3215 elevated permissions for included workflow
      checks: write # Required for test_report job to write workflow summary
    secrets:
      gcp_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
      gcp_service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
      gcp_project_id: ${{ secrets.GCP_PROJECT }}
      gcp_region: ${{ secrets.GCP_REGION }}
      gcp_zone: ${{ secrets.GCP_ZONE }}
      aws_role: ${{ secrets.AWS_TESTS_IAM_ROLE }}
      aws_session: ${{ secrets.AWS_TESTS_OIDC_SESSION }}
      aws_region: ${{ secrets.AWS_TESTS_REGION }}
      aws_s3_bucket: ${{ secrets.AWS_S3_BUCKET }}
      az_client_id: ${{ secrets.AZURE_CLIENT_ID }}
      az_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
      az_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ccc_credentials: ${{ secrets.CCC_CREDENTIALS }}
      tf_encryption: ${{ secrets.TF_ENCRYPTION }}
  download_build_requirements:
    if: ${{ inputs.build != true }}
    name: Build requirements for downloaded flavors
    uses: ./.github/workflows/build_requirements.yml
    with:
      version: ${{ inputs.version }}
      use_glrd: true
      target: ${{ inputs.target }}
    permissions:
      actions: write # TODO: 3215 elevated permissions for included workflow
  download_store_flavor_version_data:
    name: Store flavor version data
    needs: download_build_requirements
    defaults:
      run:
        shell: bash
    runs-on: ubuntu-24.04
    permissions:
      actions: write
    steps:
      - name: Prepare flavor version reference
        run: |
          jq -r -n '{ "commit_id": "${{ needs.download_build_requirements.outputs.commit_id }}", "version": "${{ needs.download_build_requirements.outputs.version }}" }' '.' > flavor_version_data.json
      - uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # pin@v5.0.0
        with:
          name: flavor-version-data
          path: flavor_version_data.json
          if-no-files-found: error
  download_platform_test_images:
    needs: download_build_requirements
    name: Download platform-test image
    uses: ./.github/workflows/build_platform_test_images.yml
    with:
      version: ${{ needs.download_build_requirements.outputs.version }}
      build: false
      platforms: '["tofu"]'
      platform_test_tag: ${{ inputs.platform_test_tag || 'nightly' }}
    permissions:
      actions: write # TODO: 3215 elevated permissions for included workflow
      packages: write # TODO: 3215 elevated permissions for included workflow
  test_distribution_build:
    needs: download_build_requirements
    name: Build and Cache Test Distribution
    uses: ./.github/workflows/build_test_dist.yml
  download_platform_test_flavors_matrix:
    needs: download_build_requirements
    name: Generate flavors matrix to test
    uses: ./.github/workflows/build_flavors_matrix.yml
    with:
      flags: ${{ inputs.flavors_parse_params_test }}
  download_platform_test_flavors:
    needs: [download_build_requirements, download_platform_test_flavors_matrix]
    name: Download flavors to test
    uses: ./.github/workflows/download_flavors_images.yml
    with:
      commit_id: ${{ needs.download_build_requirements.outputs.commit_id }}
      version: ${{ needs.download_build_requirements.outputs.version }}
      flavors_matrix: ${{ needs.download_platform_test_flavors_matrix.outputs.matrix }}
    permissions:
      id-token: write
      actions: write
    secrets:
      aws_role: ${{ secrets.AWS_TESTS_IAM_ROLE }}
      aws_session: ${{ secrets.AWS_TESTS_OIDC_SESSION }}
      aws_region: ${{ secrets.AWS_TESTS_REGION }}
      aws_s3_bucket: ${{ secrets.AWS_S3_BUCKET }}
  test_download_platform_test:
    needs:
      [
        download_build_requirements,
        download_platform_test_images,
        test_distribution_build,
        download_platform_test_flavors_matrix,
        download_platform_test_flavors,
      ]
    name: Test flavors downloaded
    uses: ./.github/workflows/tests.yml
    with:
      flavors_matrix: ${{ needs.download_platform_test_flavors_matrix.outputs.matrix }}
      test_types: ${{ inputs.test_types }}
      bare_flavors_matrix: '{"include":[]}'
    permissions:
      id-token: write # TODO: 3215 elevated permissions for included workflow
      actions: write # TODO: 3215 elevated permissions for included workflow
      checks: write # Required for test_report job to write workflow summary
    secrets:
      gcp_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
      gcp_service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
      gcp_project_id: ${{ secrets.GCP_PROJECT }}
      gcp_region: ${{ secrets.GCP_REGION }}
      gcp_zone: ${{ secrets.GCP_ZONE }}
      aws_role: ${{ secrets.AWS_TESTS_IAM_ROLE }}
      aws_session: ${{ secrets.AWS_TESTS_OIDC_SESSION }}
      aws_region: ${{ secrets.AWS_TESTS_REGION }}
      aws_s3_bucket: ${{ secrets.AWS_S3_BUCKET }}
      az_client_id: ${{ secrets.AZURE_CLIENT_ID }}
      az_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
      az_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ccc_credentials: ${{ secrets.CCC_CREDENTIALS }}
      tf_encryption: ${{ secrets.TF_ENCRYPTION }}
