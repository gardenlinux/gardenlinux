name: upload to OCI
on:
  workflow_dispatch:
    inputs:
      version:
        type: string
        default: today
      default_modifier:
        type: string
        default: ""
      commit:
        type: string
        default: "301e9e355acc9f921df64e03df6183ca126e66c3" # just for testing
    secrets:
      region:
        required: true
      role:
        required: true
      session:
        required: true
  workflow_call:
    inputs:
      version:
        type: string
        default: today
      default_modifier:
        type: string
        default: ""
    secrets:
      region:
        required: true
      role:
        required: true
      session:
        required: true
jobs:
  upload_to_oci:
    name: upload to OCI
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    permissions:
      id-token: write
      packages: write
      actions: read # required for testing, to download artifacts from other runs
    environment: oidc_aws_s3_upload
    strategy:
      fail-fast: false
      max-parallel: 1 # registry index is a shared resource among all assets
      matrix:
        arch: [ arm64 ]
        target: [ kvm ]
        modifier: [ "${{ inputs.default_modifier }}" ]
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # pin@v4.1.1
        with:
          ref: ${{ inputs.commit }}
      - uses: ./.github/actions/setup
      - uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # pin@v4
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE }}
          role-session-name: ${{ secrets.AWS_OIDC_SESSION }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: set VERSION=${{ inputs.version }}
        run: |
          bin/garden-version "${{ inputs.version }}" | tee VERSION
          git update-index --assume-unchanged VERSION
      - name: get cname
        run: |
          cname="$(./build --resolve-cname ${{ matrix.target }}${{ matrix.modifier }}-${{ matrix.arch }})"
          echo "cname=$cname" | tee -a "$GITHUB_ENV"
      - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # pin@v4.1.8
        with:
          run-id: 11587877637 # also just for testing
          # match build-${{ env.cname }} and  platform-test-${{ env.cname }}
          pattern: "*-${{ env.cname }}"
          github-token: ${{ secrets.GITHUB_TOKEN }}
      # repack tar.gz from build workflow to contain platform-test logs (if they exist)
      - name: add platform-test logs to tar.gz
        run: |
          if [ -f platform-test-${{ env.cname }}/${{ env.cname }}.platform.test.log ]; then
            gunzip build-${{ env.cname }}/${{ env.cname }}.tar.gz
            tar -rvf build-${{ env.cname }}/${{ env.cname }}.tar.gz -C platform-test-${{ env.cname }} ${{ env.cname }}.platform.test.log ${{ env.cname }}.platform.test.xml
          else
            echo "no platform-test log files found"
          fi
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install glcli util
        run: |
          pip install git+https://github.com/gardenlinux/python-gardenlinux-cli@0.2.2
      - name: Install cosign
        uses: sigstore/cosign-installer@v3.7.0
        with:
          cosign-release: 'v2.4.1'
      - name: push using the glcli util
        run: |
          GLOCI_REGISTRY_TOKEN=${{ secrets.GITHUB_TOKEN }} GLOCI_REGISTRY_USERNAME=${{ github.repository_owner }} glcli oci --insecure push-from-tarball --tar build-${{ env.cname }}/${{ env.cname }}.tar.gz --container ghcr.io/${{ github.repository_owner }}/gl-oci --architecture ${{ matrix.arch }} --version ${{ inputs.version }} --cname ${{ env.cname }} --cosign_file digest
      - name: Output digest to be signed
        run: |
          cat digest
      - name: Sign the manifest
        run: |
          cosign sign --tlog-upload=false --registry-password ${{ secrets.GITHUB_TOKEN }} --key awskms://kms.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.OCI_KMS_ARN }} ghcr.io/${{ github.repository_owner }}/gl-oci@$(cat digest)

