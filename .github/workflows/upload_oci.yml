name: upload to OCI
on:
  workflow_dispatch:
    inputs:
      version:
        type: string
        default: ""
        required: true
      default_modifier:
        type: string
        default: "-gardener_prod"
      commit:
        type: string
        default: "" # just for testing
        required: true
    secrets:
      region:
        required: true
      role:
        required: true
      session:
        required: true
  workflow_call:
    inputs:
      version:
        type: string
        default: now
      default_modifier:
        type: string
        default: ""
    secrets:
      region:
        required: true
      role:
        required: true
      session:
        required: true
jobs:
  upload_gl_artifacts_to_oci:
    name: upload to OCI
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    permissions:
      id-token: write
      packages: write
    environment: oidc_aws_s3_upload
    strategy:
      fail-fast: false
      matrix:
        arch: [ amd64, arm64 ]
        target: [ kvm, "kvm_trustedboot_tpm2", metal, "metal_trustedboot_tpm2", gcp, gdch, aws, "aws_trustedboot_tpm2", azure, ali, openstack, openstackbaremetal, vmware, "metal_pxe" ]
        modifier: [ "${{ inputs.default_modifier }}" ]
        include:
          - target: container
            arch: amd64
            modifier: ""
          - target: container
            arch: arm64
            modifier: ""
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # pin@v4.1.1
        with:
          ref: ${{ inputs.commit }}
      - uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # pin@v4
        with:
          role-to-assume: ${{ secrets.role }}
          role-session-name: ${{ secrets.session }}
          aws-region: ${{ secrets.region }}
      # bin/garden-version reads and writes from and to ./VERSION which is read by ./build --resolve-cname 
      - name: set VERSION=${{ inputs.version }}
        run: |
          bin/garden-version "${{ inputs.version }}" | tee VERSION
          git update-index --assume-unchanged VERSION
      - name: get cname
        run: |
          cname="$(./build --resolve-cname ${{ matrix.target }}${{ matrix.modifier }}-${{ matrix.arch }})"
          echo "cname=$cname" | tee -a "$GITHUB_ENV"
      - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # pin@v4.1.8
        with:
          name: build-${{ env.cname }}
      - name: Untar workflow artifact

        run: |
          mkdir ${{ env.cname }}
          tar -C ${{ env.cname }} xzv < "${{ env.cname }}.tar.gz"
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install glcli util
        run: |
          git clone --depth 1 --branch 0.3.0 https://github.com/gardenlinux/python-gardenlinux-cli.git
          mv python-gardenlinux-cli /opt/glcli
          pip install -r /opt/glcli/requirements.txt
      - name: Install cosign
        uses: sigstore/cosign-installer@v3.7.0
        with:
          cosign-release: 'v2.4.1'
      - name: push using the glcli util
        run: |
          GLOCI_REGISTRY_TOKEN=${{ secrets.GITHUB_TOKEN }} GLOCI_REGISTRY_USERNAME=${{ github.repository_owner }} python /opt/glcli/src/glcli.py push-manifest --dir ${{ env.cname }} --container ghcr.io/${{ github.repository_owner }}/gl-oci --arch ${{ matrix.arch }} --version ${{ inputs.version }} --cname ${{ env.cname }} --cosign_file digest --manifest_file oci_manifest_entry_${{ env.cname }}.json
      - name: Upload oci manifest artifact
        uses: actions/upload-artifact@v4
        with:
          name: oci_manifest_entry_${{ env.cname }}.json
          path: oci_manifest_entry_${{ env.cname }}.json
      - name: Output digest to be signed
        run: |
          cat digest
      - name: Sign the manifest
        run: |
          docker login ghcr.io -u token -p ${{ secrets.GITHUB_TOKEN }}
          cosign sign -tlog-upload=false --key awskms://kms.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.OCI_KMS_ARN }} ghcr.io/${{ github.repository_owner }}/gl-oci@$(cat digest)
      - name: Verify signature
        run: |
          cosign verify --insecure-ignore-tlog=true --key awskms://kms.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.OCI_KMS_ARN }} ghcr.io/${{ github.repository_owner }}/gl-oci@$(cat digest)
  
  upload_manifests_entries:
    needs: "upload_gl_artifacts_to_oci"
    name: upload manifest entries into OCI index
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    permissions:
      id-token: write
      packages: write
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # pin@v4.1.1
        with:
          ref: ${{ inputs.commit }}
      # bin/garden-version reads and writes from and to ./VERSION which is read by ./build --resolve-cname 
      - name: set VERSION=${{ inputs.version }}
        run: |
          bin/garden-version "${{ inputs.version }}" | tee VERSION
          git update-index --assume-unchanged VERSION
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install glcli util
        run: |
          git clone --depth 1 --branch 0.3.0 https://github.com/gardenlinux/python-gardenlinux-cli.git
          mv python-gardenlinux-cli /opt/glcli
          pip install -r /opt/glcli/requirements.txt
      - name: Download OCI manifest artifacts
        uses: actions/download-artifact@v4
        with:
          path: oci-manifests
          pattern: oci_manifest_entry_*
          merge-multiple: true
      - name: update index using glcli tool
        run: |
          cd oci-manifests
          for manifest in oci_manifest_entry*
          do
            GLOCI_REGISTRY_TOKEN=${{ secrets.GITHUB_TOKEN }} GLOCI_REGISTRY_USERNAME=${{ github.repository_owner }} python /opt/glcli/src/glcli.py update-index --container ghcr.io/${{ github.repository_owner }}/gl-oci --version ${{ inputs.version }} --manifest_file $manifest
          done
