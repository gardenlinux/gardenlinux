name: Build and publish a release
on:
  # triggered manually
  workflow_dispatch:
    inputs:
      version:
        description: 'Garden Linux version'
        type: string
        required: true
      platform_test_tag:
        description: 'Tag to run platform-test containers. "latest" or GL version. Tag must be available in `ghcr.io/gardenlinux/gardenlinux/platform-test-*`'
        type: string
        default: latest
      flavors_parse_params:
        description: 'Run bin/flavors_parse.py with these parameters'
        default: '--no-arch --json-by-arch --publish --test-platform'
        type: string
      bare_flavors_parse_params:
        description: 'Run bin/parse_flavors.py with these parameters for bare flavors'
        default: '--include-only "bare-*" --no-arch --json-by-arch --build --test'
        type: string
jobs:
  build:
    name: Build
    uses: ./.github/workflows/build.yml
    permissions:
      id-token: write
    with:
      version: ${{ inputs.version }}
      use_kms: true
      flavors_parse_params: ${{ inputs.flavors_parse_params }}
      platform_test_tag: ${{ inputs.platform_test_tag }}
      bare_flavors_parse_params: ${{ inputs.bare_flavors_parse_params }}
    secrets:
      aws_region: ${{ secrets.AWS_REGION }}
      aws_kms_role: ${{ secrets.SECUREBOOT_DB_IAM_ROLE }}
      aws_oidc_session: ${{ secrets.AWS_OIDC_SESSION }}
      secureboot_db_kms_arn: ${{ secrets.SECUREBOOT_DB_KMS_ARN }}
  test:
    needs: build
    name: Test
    if: ${{ success() || failure() }}
    uses: ./.github/workflows/tests.yml
    with:
      flavors_matrix: ${{ needs.build.outputs.flavors_matrix }}
      version: ${{ needs.build.outputs.version }}
      platform_test: true
      bare_flavors_matrix: ${{ needs.build.outputs.bare_flavors_matrix }}
    permissions:
      id-token: write
    secrets:
      gcp_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
      gcp_service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
      gcp_project_id: ${{ secrets.GCP_PROJECT }}
      gcp_region: ${{ secrets.GCP_REGION }}
      gcp_zone: ${{ secrets.GCP_ZONE }}
      aws_role: ${{ secrets.AWS_TESTS_IAM_ROLE }}
      aws_session: ${{ secrets.AWS_TESTS_OIDC_SESSION }}
      aws_region: ${{ secrets.AWS_TESTS_REGION }}
      aws_s3_bucket: ${{ secrets.AWS_S3_BUCKET }}
      az_client_id: ${{ secrets.AZURE_CLIENT_ID }}
      az_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
      az_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ccc_credentials: ${{ secrets.CCC_CREDENTIALS }}
      tf_encryption: ${{ secrets.TF_ENCRYPTION }}
  upload_workflow_data:
    needs: [ build, test ]
    name: Store workflow data
    runs-on: ubuntu-24.04
    steps:
      - name: Store data in JSON file
        run: |
          jq -r --arg 'matrix' '${{ needs.build.outputs.flavors_matrix }}' --arg 'bare_matrix' '${{ needs.build.outputs.bare_flavors_matrix }}' -n '{
            "id": ${{ github.run_id }},
            "flavors_matrix": $matrix,
            "bare_flavors_matrix": $bare_matrix,
            "version": "${{ needs.build.outputs.version }}",
            "original_workflow_name": "${{ github.workflow }}"
          }' '.' > workflow_data.json
      - uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # pin@v4.4.3
        with:
          name: workflow-data
          path: workflow_data.json
          if-no-files-found: error
