# Build and publish
name: Build and publish a release
concurrency:
  group: ${{ inputs.ignore_workflow_concurrency && github.run_id || format('{0}-{1}-manual-release', github.workflow, github.ref) }}
  cancel-in-progress: true
on:
  # triggered manually
  workflow_dispatch:
    inputs:
      version:
        description: 'Garden Linux version'
        type: string
        required: true
      target:
        description: 'Garden Linux release target'
        required: true
        type: choice
        options:
          - release
          - nightly
      platform_test_tag:
        description: 'Tag to run platform-test containers. "latest" or GL version. Tag must be available in `ghcr.io/gardenlinux/gardenlinux/platform-test-*`'
        type: string
        default: latest
      flavors_parse_params:
        description: 'Run bin/flavors_parse.py with these parameters'
        default: '--exclude "bare-*" --no-arch --json-by-arch --build --test'
        type: string
      bare_flavors_parse_params:
        description: 'Run bin/parse_flavors.py with these parameters for bare flavors'
        default: '--include-only "bare-*" --no-arch --json-by-arch --build --test'
        type: string
      ignore_workflow_concurrency:
        description: 'Execute workflows concurrently'
        type: boolean
        default: false
jobs:
  build:
    name: Build
    uses: ./.github/workflows/build.yml
    permissions:
      id-token: write # TODO: 3215 elevated permissions for included workflow
      actions: write  # TODO: 3215 elevated permissions for included workflow
      packages: write # TODO: 3215 elevated permissions for included workflow
    with:
      version: ${{ inputs.version }}
      target: ${{ inputs.target }}
      flavors_parse_params: ${{ inputs.flavors_parse_params }}
      platform_test_tag: ${{ inputs.platform_test_tag }}
      bare_flavors_parse_params: ${{ inputs.bare_flavors_parse_params }}
      fail_fast: true
    secrets:
      aws_region: ${{ secrets.AWS_REGION }}
      aws_kms_role: ${{ secrets.KMS_SIGNING_IAM_ROLE }}
      aws_oidc_session: ${{ secrets.AWS_OIDC_SESSION }}
      secureboot_db_kms_arn: ${{ secrets.SECUREBOOT_DB_KMS_ARN }}
  build_retry:
    needs: build
    if: ${{ failure() && needs.build.result == 'failure' }}
    name: 'Retry checkpoint: Build'
    runs-on: ubuntu-24.04
    permissions:
      actions: write
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # pin@v5.0.0
      - name: Retry failed build
        uses: actions/github-script@v8
        with:
          script: |
            const gitHubLib = await import("${{ github.workspace }}/.github/workflows/github.mjs");

            const gitHubRef = "${{ github.head_ref == '' && github.ref_name || github.head_ref }}";
            return await gitHubLib.dispatchRetryWorkflow(core, github.rest.actions, context, gitHubRef, 3);
  test:
    needs: build
    name: Test
    uses: ./.github/workflows/tests.yml
    with:
      flavors_matrix: ${{ needs.build.outputs.flavors_matrix }}
      version: ${{ needs.build.outputs.version }}
      platform_test: true
      bare_flavors_matrix: ${{ needs.build.outputs.bare_flavors_matrix }}
    permissions:
      id-token: write # TODO: 3215 elevated permissions for included workflow
      actions: write  # TODO: 3215 elevated permissions for included workflow
    secrets:
      gcp_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
      gcp_service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
      gcp_project_id: ${{ secrets.GCP_PROJECT }}
      gcp_region: ${{ secrets.GCP_REGION }}
      gcp_zone: ${{ secrets.GCP_ZONE }}
      aws_role: ${{ secrets.AWS_TESTS_IAM_ROLE }}
      aws_session: ${{ secrets.AWS_TESTS_OIDC_SESSION }}
      aws_region: ${{ secrets.AWS_TESTS_REGION }}
      aws_s3_bucket: ${{ secrets.AWS_S3_BUCKET }}
      az_client_id: ${{ secrets.AZURE_CLIENT_ID }}
      az_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
      az_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ccc_credentials: ${{ secrets.CCC_CREDENTIALS }}
      tf_encryption: ${{ secrets.TF_ENCRYPTION }}
  test_retry:
    needs: test
    if: ${{ failure() && needs.test.result == 'failure' }}
    name: 'Retry checkpoint: Test'
    runs-on: ubuntu-24.04
    permissions:
      actions: write
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # pin@v5.0.0
      - name: Retry failed test
        uses: actions/github-script@v8
        with:
          script: |
            const gitHubLib = await import("${{ github.workspace }}/.github/workflows/github.mjs");

            const gitHubRef = "${{ github.head_ref == '' && github.ref_name || github.head_ref }}";
            return await gitHubLib.dispatchRetryWorkflow(core, github.rest.actions, context, gitHubRef, 5);
  upload_workflow_data:
    needs: [ build, test ]
    name: Store workflow data
    runs-on: ubuntu-24.04
    permissions:
      actions: write
    steps:
      - name: Store data in JSON file
        run: |
          jq -r --arg 'matrix' '${{ needs.build.outputs.flavors_matrix }}' --arg 'bare_matrix' '${{ needs.build.outputs.bare_flavors_matrix }}' -n '{
            "id": ${{ github.run_id }},
            "flavors_matrix": $matrix,
            "bare_flavors_matrix": $bare_matrix,
            "version": "${{ needs.build.outputs.version }}",
            "original_workflow_name": "${{ github.workflow }}"
          }' '.' > workflow_data.json
      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # pin@v4.6.2
        with:
          name: workflow-data
          path: workflow_data.json
          if-no-files-found: error
