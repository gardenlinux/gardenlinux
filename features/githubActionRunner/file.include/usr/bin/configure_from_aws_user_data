#!/bin/bash

set -Eexufo pipefail

scheduler_conf=/etc/github_action_scheduler.conf
scheduler_app_rsa_key=/etc/github_action_scheduler.pem

runner_dir=/opt/github_action_runner

user_data="$(curl -sS http://169.254.169.254/latest/user-data)"

scheduler_json="$(jq -r '.scheduler' <<< "$user_data")"

if [ "$scheduler_json" != "null" ]; then
	jq -r '.config | to_entries[] | .key + "=" + .value' <<< "$scheduler_json" >> "$scheduler_conf"
	if jq -er '.app_rsa_key' <<< "$scheduler_json" | base64 -d > "$scheduler_app_rsa_key"; then
		echo "app_rsa_key=$scheduler_app_rsa_key" >> "$scheduler_conf"
	fi

	echo "runner_dir_template=$runner_dir" >> "$scheduler_conf"

	echo "ami=$(curl -sS http://169.254.169.254/latest/meta-data/ami-id)" >> "$scheduler_conf"
	echo "region=$(curl -sS http://169.254.169.254/latest/meta-data/placement/region)" >> "$scheduler_conf"

	echo "webhook_port=8080" >> "$scheduler_conf"
	iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-port 8080

	systemctl start github_action_scheduler.service
fi

runner_json="$(jq -r '.runner' <<< "$user_data")"

if [ "$runner_json" != "null" ]; then
	for file in .runner .credentials .credentials_rsaparams; do
		jq -er "$file" <<< "$runner_json" | base64 -d > "$runner_dir/$file"
	done

	systemctl start github_action_runner.service
fi