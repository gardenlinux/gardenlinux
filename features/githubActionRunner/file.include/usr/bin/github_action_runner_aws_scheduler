#!/bin/bash

set -Eexufo pipefail

server_path="$(realpath "$(dirname "$BASH_SOURCE")/server")"
webhook_listener_path="$(realpath "$(dirname "$BASH_SOURCE")/github_webhook_workflow_job_listener")"
run_ec2_path="$(realpath "$(dirname "$BASH_SOURCE")/run_ec2_github_action_runner")"

runner_dir_template=
webhook_port=
max_num_runners=64
ami=
instance_type=
security_group=
region=
repo=
label=
api_token=
app_id=
app_rsa_key=
ssh_key=
config=

while [ "$#" -gt 0 ]; do
	flag="$1"; shift
	case "$flag" in
		-d|--runner-dir) runner_dir_template="$1"; shift ;;
		-w|--webhook-port) webhook_port="$1"; shift ;;
		-m|--max-num-runners) max_num_runners="$1"; shift ;;
		-i|--ami) ami="$1"; shift ;;
		-s|--security-group) security_group="$1"; shift ;;
		-e|--ec2-instance-type) instance_type="$1"; shift ;;
		-g|--region) region="$1"; shift ;;
		-r|--repo) repo="$1"; shift ;;
		-l|--label) label="$1"; shift ;;
		-t|--token) api_token="$1"; shift ;;
		-a|--app) app_id="$1"; shift ;;
		-k|--key) app_rsa_key="$1"; shift ;;
		-p|--ssh) ssh_key="$1"; shift ;;
		-c|--config) config="$1"; shift ;;
	esac
done

if [ -n "$config" ]; then
	while IFS='=' read -r key value; do
		declare "$key"="$value"
	done < "$config"
fi

export AWS_DEFAULT_REGION="$region"

verbose_log="$(mktemp)"

exec "$server_path" "$webhook_port" "$webhook_listener_path" "$verbose_log" "$label" "$max_num_runners" 6 \
	"\"$run_ec2_path\" \
	${runner_dir_template:+\"--runner-dir\"} ${runner_dir_template:+\"$runner_dir_template\"} \
	${ami:+\"--ami\"} ${ami:+\"$ami\"} \
	${security_group:+\"--security-group\"} ${security_group:+\"$security_group\"} \
	${instance_type:+\"--ec2-instance-type\"} ${instance_type:+\"$instance_type\"} \
	${repo:+\"--repo\"} ${repo:+\"$repo\"} \
	${label:+\"--label\"} ${label:+\"$label\"} \
	${api_token:+\"--token\"} ${api_token:+\"$api_token\"} \
	${app_id:+\"--app\"} ${app_id:+\"$app_id\"} \
	${app_rsa_key:+\"--key\"} ${app_rsa_key:+\"$app_rsa_key\"} \
	${ssh_key:+\"--ssh\"} ${ssh_key:+\"$ssh_key\"}" \
	'aws ec2 describe-instance-status --instance-ids "$1" | jq -er '"'"'.InstanceStatuses[0]'"'"'' \
	'aws ec2 terminate-instances --instance-ids "$1"'
