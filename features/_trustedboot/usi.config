#!/usr/bin/env bash

set -eufo pipefail

uki="$1"
esp_dir="$2"
rootfs="$3"

case "$BUILDER_ARCH" in
	amd64)
		uefi_arch=X64
		;;
	arm64)
		uefi_arch=AA64
		;;
esac

PKCS11_MODULE_PATH="/usr/lib/$(uname -m)-linux-gnu/pkcs11/aws_kms_pkcs11.so"
export PKCS11_MODULE_PATH

cert_base="/builder/cert/secureboot.db"

if [ -f "$cert_base.key" ]; then
	sbs_key_params=(--key "$cert_base.key")
elif [ -f "$cert_base.arn" ]; then
	sbs_key_params=(--engine pkcs11 --key "pkcs11:token=$(basename "$(cat "$cert_base.arn")" | cut -c -32)")
else
	echo "neither $cert_base.key nor $cert_base.arn exists, but at least one is required" >&2
	exit 1
fi

mkdir -p "$esp_dir/EFI/BOOT"
datefudge -s "@$BUILDER_TIMESTAMP" sbsign --cert "$cert_base.crt" "${sbs_key_params[@]}" --output "$esp_dir/EFI/BOOT/BOOT$uefi_arch.EFI" "$rootfs/usr/lib/systemd/boot/efi/systemd-boot$(tr '[:upper:]' '[:lower:]' <<< "$uefi_arch").efi"

mkdir "$esp_dir/loader"
cat > "$esp_dir/loader/loader.conf" << EOF
timeout 0
reboot-on-error 1
secure-boot-enroll force
EOF

mkdir -p "$esp_dir/loader/keys/auto"
for key in PK KEK db; do
	cp "$rootfs/etc/gardenlinux/gardenlinux-secureboot.$(tr '[:upper:]' '[:lower:]' <<< "$key").auth" "$esp_dir/loader/keys/auto/$key.auth"
done

uki_signed="$(mktemp)"
datefudge -s "@$BUILDER_TIMESTAMP" sbsign --cert "$cert_base.crt" "${sbs_key_params[@]}" --output "$uki_signed" "$uki"

mkdir "$esp_dir/EFI/Linux"
mv "$uki_signed" "$esp_dir/EFI/Linux/$BUILDER_CNAME.efi"
